#     if defined (AUTO_DOC)
*
*     CALL SEQUENCE...
*     rgopr   GGIN GGOUT OUTPUT
*
*
*     DESCRIPTION...
*     rgopr   - MULTIPLIES PRESSURE GRID SETS BY RGAS/PRESSURE
*
*
*     AUTHORS - R.Laprise AND J.D.Henderson, MAY 13 1983.
*     LAST REVISION: $Header: /home/cvs/RMNLIB/utils/rdiag/lspgm/rgopr.ptn,v 4.9 2014/09/25 20:20:52 dugas Exp $
*
*
*     PURPOSE - MULTIPLIES A MULTI-LEVEL PRESSURE FILE BY (RGAS/PRESSURE).
*               IF THE FILE CONTAINS TEMPERATURE THE RESULT WILL BE
*               SPECIFIC VOLUME (RT/P).
*          
*
*     INPUT FILE...
*      GGIN  = FILE OF PRESSURE LEVEL SETS (REAL OR COMPLEX).
*
*
*     OUTPUT FILE...
*      GGOUT = COPY OF FILE GGIN MULTIPLIED BY (RGAS/PRESSURE).
*           
*
*     EXIT CONDITIONS...
*       0 NO PROBLEMS
*       1 MORE THAN ONE SIZE IN GGIN
*       2 PREMATURE EOF IN GGIN
*       3 GGIN DOES NOT CONTAIN PRESSURE LEVELS
*
#     endif
#     if defined (RDIAG_LICENCE)
!---------------------------------- LICENCE BEGIN -------------------------------
! R.DIAG - Diagnostic tool kit for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This code is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
#     endif
#     if !defined (NO_SOURCE)
      PROGRAM rgopr
*     PROGRAM RGOPR (GGIN,       GGOUT,       OUTPUT,
*    1         TAPE1=GGIN, TAPE2=GGOUT, TAPE6=OUTPUT)
*     -----------------------------------------------
*
*     $Log: rgopr.ptn,v $
*     Revision 4.9  2014/09/25 20:20:52  dugas
*     Inserer le texte de la licence LPGPL 2.1 pour R.DIAG.
*
*     Revision 4.8  2008/05/03 21:06:30  dugas
*     Modification generale pour r.gppf.
*
*     Revision 4.7  2007/12/20 21:07:19  dugas
*     - Utiliser ALLOCATE/DEALLOCATE plutot que HPALLOC/HPDEALLC.
*     - Utiliser CONVPR pour decoder les niveaux verticaux.
*     - Faire appel aux routines PRTLAB/PRTLAB2.
*
*     Revision 4.6  2005/04/14 18:30:27  dugas
*     - Ignorer les enregistrements de type LABL/CHAR.
*     - Assurer une allocation minimale a la lecture de MAXW mots.
*
*     Revision 4.5  2003/09/15 15:49:33  dugas
*     Enlever toutes references a MEMOIR.
*
*     Revision 4.4  2003/07/05 14:50:28  dugas
*     Implanter SETRABT pour le traitement de RECABT.
*
*     Revision 4.3  1998/07/03 02:26:35  armnrbd
*     Allonger le format d'ecriture de la date sur le listing.
*
*     Revision 4.2  1997/09/26  17:39:14  armnrbd
*     Remplacer buf(16) par buf(taille_entete).
*
*     Revision 4.1  1996/02/29  20:44:21  armnrbd
*     Imprimer plus d'informations lors du traitement du cas MAXW=0
*     et aussi quand le programme se mets a ignorer les LABLs.
*
*     Revision 4.0  1994/11/17  14:21:27  armnrbd
*     Messages informatifs quand au passage de la version 3.x a 4.0...
*     1) Les espaces en debut des noms de variables de sont plus pertinents.
*     2) Les grilles complexes de type CMPL sont maintenant supportees.
*     3) Les fichiers SQI sont reconnus, lus et ecrit directements.
*     4) Plusieurs nouvelles cles sont disponibles au demarrage.
*
*     Revision 3.0  93/10/13  13:56:47  armnrbd
*     Premiere version compatible HP-UX.
*     
*     Revision 1.5  92/11/23  14:26:06  armnrbd
*     Deuxieme iteration avec GETSIZ/GETSIZ2.
*     
*     Revision 1.4  92/11/10  17:35:16  armnrbd
*     Implantation de GETSIZ/GETSIZ2.
*     
*     Revision 1.3  92/10/13  15:57:17  armnrbd
*     Definir JBUF(8)=-32, plutot que JBUF(8)=1.
*     
*     Revision 1.2  92/10/13  15:04:01  armnrbd
*     Dernier BugFix.
*     
*     Revision 1.1  92/08/25  22:54:33  armnrbd
*     Bugfix a la ligne 904.
*     
*     Revision 1.0  92/08/25  16:13:02  armnrbd
*     Initial revision
*     
*     MAY 13/83 - R.LAPRISE.
*     JUL 01/80 - J.D.HENDERSON
*
*-----------------------------------------------------------------------
      IMPLICIT    none

      INTEGER     MAXLEV
      PARAMETER ( MAXLEV = 999 )

      LOGICAL     OK
      CHARACTER*4 TYPE,MESSAG*10
      REAL        RGAS,ZERO,CONST,PR(MAXLEV)
      INTEGER     LEVEL(MAXLEV),HEAD,JBUF(taille_entete),
     +            NR,I,L,IL,NWDS,NFF,NLEV,NLEVG,MAXW,
     +            LEN,JPAK,GETSIZ2,IER,VKIND

      INTEGER,    DIMENSION(:), ALLOCATABLE :: IBUF
      REAL,       DIMENSION(:), ALLOCATABLE :: G

      CHARACTER   NOMPRG*256
      COMMON     /PROGNAM/ NOMPRG

      CHARACTER   GETYP*4,PKTYP*2
      EXTERNAL    MACSPE,JCLPNT,GETSIZ2,GETSET2,
     +            XIT,CMPLBL,PUTSET2,GETYP,CONVPR

      DATA        RGAS / 287. /
      DATA        MESSAG / 'AUCUN' /
*===================================================================

      NOMPRG =
     +'$Source: /home/cvs/RMNLIB/utils/rdiag/lspgm/rgopr.ptn,v $'

*-------------------------------------------------------------------
***    ALLER CHERCHER QUELQUES CONSTANTES SPECIFIQUES.

      CALL MACSPE( HEAD,ZERO )
      CALL SETRABT( '&NON' )

***    ACCEDER LES FICHIERS D'E/S.

      NFF = 3
      CALL JCLPNT( NFF, 1,2, 6 )

***    GET PACKING TYPE.

      PKTYP = GETYP( 1 )

      NR = 0

***    ASK FOR NECESSARY MEMORY. READ FIRST SET OF INFO BUFFERS.

  100 MAXW = GETSIZ2( 1, JBUF,LEN,NWDS,JPAK, LEVEL,NLEV )
      IF (MAXW.LE.0) GOTO 904

      WRITE(TYPE,4) JBUF(1)
      IF (TYPE.EQ.'ZONL') NWDS = JBUF(5)

      ALLOCATE( IBUF(LEN),G(MAX( MAXW,NWDS*NLEV )) )

      DO  L=1,NLEV
          CALL CONVPR( LEVEL(L), PR(L), VKIND, -2 )
          IF (PKTYP.EQ.'SQ' .AND. VKIND.NE.2) CALL XIT('  Rgopr ',-3 ) 
      END DO

      IF (NR.NE.0) CALL PRTLAB( JBUF )

***    READ THE NEXT SET OF GRIDS FROM FILE XIN. 

  200 CALL GETSET2( 1, G,LEVEL,NLEVG, IBUF,MAXW,OK )

          IF (.NOT.OK)                                         THEN

              IF (MAXW.EQ.0)                                   THEN
                  DEALLOCATE( IBUF,G )
                  GOTO 100
              END IF

              WRITE(6,6010) NR
              CALL PRTLAB( IBUF )
              CALL                                XIT('  Rgopr ', 0 ) 

          END IF

***        BY-PASS (I.E. STRIP) LABEL/CHARACTER RECORDS.

          WRITE(TYPE,4) IBUF(1) 
          IF (TYPE.EQ.'LABL' .OR. TYPE.EQ.'CHAR')              THEN
              IF (MESSAG.NE.'deja donne')                      THEN
                  WRITE(6,6035)
                  MESSAG  = 'deja donne'
              END IF
              GOTO 100
          END IF

          IF (NR.EQ.0) CALL PRTLAB( IBUF )

***        VERIFY SIZES.

          CALL CMPLBL( 0,JBUF, 0,IBUF, OK )

          IF (.NOT.OK .OR. NLEV.LT.NLEVG)                      THEN
              CALL PRTLAB( IBUF )
              CALL                                 XIT('  Rgopr ',-1 ) 
          END IF

***        MULTIPLY BY RGAS/PRESSURE.

          DO 300 L=1,NLEVG
              CONST = RGAS/( PR(L)*100. )
              IL    = (L-1)*NWDS
              DO 300 I=1,NWDS
                  G(IL+I) = G(IL+I)*CONST
  300     CONTINUE

***        SAVE ON FILE GGOUT.

          CALL PUTSET2( 2, G, LEVEL,NLEVG, IBUF,MAXW )

      NR = NR+NLEVG
      GOTO 200 

***    E.O.F. ON UNIT #1.

  904 CALL                                        XIT('  Rgopr ',-2 )

*---------------------------------------------------------------------
    4 FORMAT(A4)

 6010 FORMAT('0',I6,' records read.')
 6035 FORMAT(' Rgopr is stripping label/character records...')

      END
#     endif
