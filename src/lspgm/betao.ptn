#     if defined (AUTO_DOC)
*
*     CALL SEQUENCE...
*      betao  GPHIS GPHI BETA PS OUTPUT
*
*
*     DESCRIPTION...
*      betao  - COMPUTES BETA FOR OBSERVED HEIGHTS
*
*
*     AUTHOR  - G.J.BOER, MAR 87.
*     LAST REVISION: $Header: /home/cvs/RMNLIB/utils/rdiag/lspgm/betao.ptn,v 4.11 2014/09/25 20:20:45 dugas Exp $
*
*
*
*     PURPOSE - COMPUTES THE FUNCTION "BETA" CORRESPONDING TO A SET
*               OF GEOPOTENTIAL HEIGHTS ON PRESSURE LEVELS AND
*               SURFACE GEOPOTENTIALS.
*
*     NOTES   - 1) BETA MAY EXCEED 1 IN LOWEST LAYER.
*               2) THE FORM OF BETA IS CONSISTENT WITH
*                  THE USE OF PROGRAM VPINT
*               3) MINIMUM NUMBER OF LEVELS IS 2, MAX IS 999.
*
*
*     INPUT FILES...
*      GPHIS  = INPUT GEOPOTENTIAL HEIGHTS OF SURFACE
*      GPHI   = INPUT SETS OF GEOPOTENTIAL HEIGHTS
*
*     OUTPUT FILES...
*      BETA   = BETA GRID VALID AT EACH LEVELS
*      PS     = OUTPUT SERIES OF INFERRED SURFACE PRESSURE
*
*
*     EXIT CONDITIONS...
*       0 NO PROBLEMS
*       1 TOO MANY OR NOT ENOUGH  LEVELS
*       2 FOUND SPECTRAL DATA ON GPHI
*       3 FOUND "PR(NLEV) > 1013"
*       4 UNABLE TO READ MONTAIN FILE
*       5 UNABLE TO READ GEOPOTENTIAL FILE
*       6 HIGHEST LEVEL BELOW TOP OF MONTAINS
*       7 MORE THAN ONE SIZE IN INPUT DATA
*       8 LAST GEOPOTENTIAL SET INCOMPLETE
*       9 VERTICAL COORDINATE IS NOT PRESSURE
*      10 FOUND WRONG VARIABLES
*      11 VERTICAL LEVELS NOT MONOTONOUS
#     endif
#     if defined (RDIAG_LICENCE)
!---------------------------------- LICENCE BEGIN -------------------------------
! R.DIAG - Diagnostic tool kit for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This code is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
#     endif
#     if !defined (NO_SOURCE)
      PROGRAM betao
*     PROGRAM BETAO (GPHIS,      GPHI,      BETA,      PS,      OUTPUT,
*    1         TAPE1=GPHIS,TAPE2=GPHI,TAPE3=BETA,TAPE4=PS,TAPE6=OUTPUT)
*     -----------------------------------------------------------------

*     $Log: betao.ptn,v $
*     Revision 4.11  2014/09/25 20:20:45  dugas
*     Inserer le texte de la licence LPGPL 2.1 pour R.DIAG.
*
*     Revision 4.10  2010/02/15 19:03:46  dugas
*     Utiliser la fonction intrinseque MERGE plutot que CVMGT.
*
*     Revision 4.9  2009/09/08 20:42:27  dugas
*     Allocate/f90 et supporter des niveaux verticaux inverses.
*
*     Revision 4.8  2008/11/24 21:56:19  dugas
*     Distinguer MT et ME en mode SQxx.
*
*     Revision 4.7  2008/05/03 21:06:30  dugas
*     Modification generale pour r.gppf.
*
*     Revision 4.6  2007/12/20 21:10:29  dugas
*     - Utiliser CONVPR pour decoder les niveaux verticaux.
*     - Faire appel aux routines PRTLAB/PRTLAB2.
*
*     Revision 4.5  2003/06/23 14:48:45  dugas
*     Modifier le traitement des noms de variables.
*     Allocation de memoire dynamique passant par GETSIZ.
*
*     Revision 4.4  1998/09/23 14:17:23  armnrbd
*     Donner un nom approprie a PS si pktyp=SQ89.
*     Niveau de sortie pour PS est 0 et non pas 1.
*
*     Revision 4.3  1998/07/03  02:26:20  armnrbd
*     Allonger le format d'ecriture de la date sur le listing.
*
*     Revision 4.2  1997/04/17  18:15:13  armnrbd
*     IBUF(2) et IBUF(4) ne sont plus consultes dans la recherche de PHIS.
*
*     Revision 4.1  1996/11/12  19:44:27  armnrbd
*     Ajouter le support de grilles de type SUBA.
*     Ajouter le support des fichiers SQI.
*
*     Revision 4.0  1994/11/17  14:19:18  armnrbd
*     Messages informatifs quand au passage de la version 3.x a 4.0...
*     1) Les espaces en debut des noms de variables de sont plus pertinents.
*     2) Les grilles complexes de type CMPL sont maintenant supportees.
*     3) Les fichiers SQI sont reconnus, lus et ecrit directements.
*     4) Plusieurs nouvelles cles sont disponibles au demarrage.
*
*     Revision 3.0  93/10/13  13:55:33  armnrbd
*     Premiere version compatible HP-UX.
*     
*     Revision 1.0  92/04/29  01:27:16  armnrbd
*     Initial revision
*     
*     JUL 04/88 - F.MAJAESS (CHANGE TIME FIELD TO '-1' IN GETFLD2)
*     MAR   /87 - G.J.BOER

*-----------------------------------------------------------------------
      IMPLICIT    none

      INTEGER     HEAD
      PARAMETER ( HEAD = taille_entete )
      INTEGER     MAXLEV
      PARAMETER ( MAXLEV = 999 )

      LOGICAL     OK,SPEC,          MONOTON
      CHARACTER*4 NAME,KIND,        CBETA,CPS,    CPHI,CPHIS
      INTEGER     LEV(MAXLEV),      NLEV,NLEVA,   NLEVP,VKIND,
     +            I,L,K,NFF,        NLAT,NLON,    NSETS,
     +            MAXW,MAXW1,MAXW2, LBUF(HEAD),   KBUF(HEAD),
     +            LEN,LEN1,LEN2,    LPAK,KPAK,    NWDS,
     +            TOP,BOT,INC,IER,  PREV,CURR
      REAL        PRH(0:MAXLEV+1),  P(MAXLEV+1),  A(MAXLEV+1),
     +            DP(MAXLEV+1),     DA(0:MAXLEV+1), PHMAX,
     +            PHICON,MTCON,     GZ,GZM

      INTEGER,    DIMENSION(:),ALLOCATABLE :: IBUF
      REAL,       DIMENSION(:),ALLOCATABLE :: PHIS,PHI,BETA,PS

      CHARACTER   NOMPRG*256
      COMMON     /PROGNAM/ NOMPRG

      CHARACTER*4 GETYP,PKTYP
      INTEGER     GETSIZ,GETSIZ2,GETKIND
      EXTERNAL    MACSPE,JCLPNT,XIT,
     +            GETFLD2,PUTFLD2,GETYP,CONVERT,
     +            GETSIZ,GETSIZ2,GETKIND,WRITLEV,
     +            MONVERT,GETSET2,PUTSET2

      DATA        PHMAX / 1013.0 /, CBETA / 'BETA' /, VKIND / 2 /
*===================================================================

      NOMPRG =
     +'$Source: /home/cvs/RMNLIB/utils/rdiag/lspgm/betao.ptn,v $'

*--------------------------------------------------------------------
***    ACCEDER LES FICHIERS D'E/S.

      NFF = 5
      CALL JCLPNT( NFF, 1,2,3,4, 6 )

      PKTYP = GETYP( 1 )

      NSETS = 0

***    EXAMINE FILES TO DETERMINE THE NUMBER OF LEVELS IN EACH SET.
***    STOP IF ANY FILE IS EMPTY.

  100 MAXW1 = GETSIZ ( 1, KBUF,LEN1,NWDS,KPAK )
      MAXW2 = GETSIZ2( 2, LBUF,LEN2,NWDS,LPAK, LEV,NLEV )

      IF (MAXW1 == 0) CALL                         XIT('  Betao ',-4 )
      IF (MAXW2 == 0 .OR. NLEV <   2     .OR.
     +                    NLEV > MAXLEV) CALL      XIT('  Betao ',-1 )

      WRITE(CPHIS,0004) KBUF(3)
      WRITE(CPHI, 0004) LBUF(3)

      IF (PKTYP.EQ.'SQ89')                                     THEN

          IF ((CPHIS /= 'ME' .AND.
     +         CPHIS /= 'MT').OR.
     +         CPHI  /= 'GZ' ) CALL                XIT('  Betao ',-10) 

          CPS    = 'P0'
          PHICON = 98.0665

          IF (CPHIS == 'MT')                                   THEN
              MTCON = 1.0
          ELSE
              MTCON = 9.80665
          ENDIF

      ELSE

          IF ((CPHIS == 'MT'  .OR.
     +         CPHIS == 'ME') .AND.
     +         CPHI  == 'GZ')                                  THEN
              CPS    = 'P0'
              PHICON = 98.0665
              IF (CPHIS == 'MT')                               THEN
                  MTCON = 1.0
              ELSE
                  MTCON = 9.80665
              ENDIF
          ELSE
     +    IF (CPHIS == 'PHIS' .AND.
     +        CPHI  == 'PHI')                                  THEN
              CPS    = 'PS'
              MTCON  = 1.0
              PHICON = 1.0
          ELSE
              WRITE(6,6010) CPHIS,CPHI
              CALL                                 XIT('  Betao ',-10) 
          END IF

      END IF

      CALL CMPLBL( 0,LBUF, 0,KBUF, OK ) 

      IF (.NOT.OK)                                             THEN
          CALL PRTLAB( LBUF ) ; CALL PRTLAB( KBUF )
          CALL                                     XIT('  Betao ',-7 ) 
      END IF

      LEN  = MAX( LEN1,  LEN2  )
      MAXW = MAX( MAXW1, MAXW2 )

      ALLOCATE( PHIS(LEN),PHI (NLEV*LEN),
     +          PS  (LEN),BETA(NLEV*LEN),IBUF(LEN) )

      IF (PKTYP(1:2) == 'SQ')                                  THEN

***        CHECK THAT WE HAVE A PRESSURE VERTICAL COORDINATE.

          VKIND = GETKIND()

          IF (VKIND /= 2)                                      THEN
              WRITE(6,6009)
              CALL                                 XIT('  Betao ',-9 )
          END IF

      END IF

      WRITE(NAME,4) LBUF(3)
      WRITE(6,6100) NAME

      DO  K=1,NLEV
          CALL CONVPR( LEV(K), P(K), VKIND, -2 )
      END DO

      CALL WRITLEV( P,NLEV,'PRES' )
 
***     CHECK THAT P IS MONOTONIC.

      CALL MONVERT( P,NLEV, TOP,BOT,INC, MONOTON )

      IF (.NOT.MONOTON)                                        THEN
          WRITE(6,6011)
          CALL                                     XIT('  Betao ',-11)
      END IF

***    DETERMINE THE FIELD SIZE AND CHECK FOR SPECTRAL INPUT
 
      WRITE(KIND,4) LBUF(1)
      SPEC = (KIND == 'SPEC' .OR.
     +        KIND == 'FOUR' .OR.
     +        KIND == 'CMPL')

      IF (SPEC) CALL                               XIT('  Betao ',-2 )
*----------------------------------------------------------------------

***    GET PRESSURE, A=LN(PRES), HALF LEVEL PRESSURE,
***    LAYER PRESS THICKNESS DP AND DIFFERENCE DA IN LN(PRESS)
***    *** NB *** CHOICE OF PH(1)=P(1)/2 AND PH(NLEV+1)=1013 MB
***               IS FOR CONSISTENCY OF NEW BETA AND OLD "DELTA"
***               WITH VPINT.  LOWEST FULL LEVEL PRESSURE MUST BE
***               LESS THAN 1013 MB.

      NLEVP = BOT+INC

      DO  L=TOP,BOT,INC
          A(L) = ALOG( P(L) )
      END DO

      IF (P(BOT) > PHMAX) CALL                     XIT('  Betao ',-3 )

      PRH(TOP)   =  P(TOP)*0.5
      DO  L=TOP+INC,BOT,INC
          PRH(L) = (P(L)+P(L-INC))*0.5
          DA(L)  =  A(L)-A(L-INC)
      END DO
      PRH(NLEVP) =      PHMAX
      DA(NLEVP)  = ALOG(PHMAX)-A(BOT)

      DO  L=TOP,BOT,INC
          DP(L) = PRH(L+INC)-PRH(L)
      END DO

*----------------------------------------------------------------------
***    GET THE MOUNTAINS.

      CALL GETFLD2( 1, PHIS, 'GRID'//'SUBA',-1,CPHIS,-1, IBUF,MAXW,OK )

      IF (.NOT.OK) CALL                            XIT('  Betao ',-4 )
      CALL PRTLAB( IBUF )

      NLON = IBUF(5)
      NLAT = IBUF(6)

      DO  I=1,NWDS
          PHIS(I) = PHIS(I)*MTCON
      END DO
*----------------------------------------------------------------------

***    CALCULATE NEW BETA.

  200 CALL GETSET2( 2, PHI,LEV,NLEVA, IBUF,MAXW,OK )

          IF (.NOT.OK)                                         THEN
              WRITE(6,6200) NSETS
              IF (NSETS.EQ.0)                                  THEN
                  WRITE(6,6005)
                  CALL                             XIT('  Betao ',-5 )
              ELSE
                  CALL                             XIT('  Betao ', 0 )
              END IF
              GOTO 1000
          END IF

          CALL CMPLBL( 0,LBUF, 0,IBUF, OK ) 

          IF (.NOT.OK .OR. NLEV /= NLEVA)                      THEN
              CALL PRTLAB( LBUF ) ; CALL PRTLAB( IBUF )
              CALL                                 XIT('  Betao ',-7 ) 
          END IF

          IF (NSETS == 0) CALL PRTLAB( IBUF )
          
***        SPECIAL PROCESSING FOR TOP LEVEL. SET TOP LEVEL BETA=1,
***        PS=PHMAX AND PREV DATA POINTER TO THAT OF TOP LEVEL

          PS = PHMAX ; BETA = 1.0 ; PREV = (TOP-1)*NWDS

***        CHECK THAT THIS FIRST LEVEL IS ABOVE ALL MOUNTAINS.

          DO  I=1,NWDS
              GZM = PHI(PREV+I)*PHICON
              IF (PHIS(I).GT.GZM) CALL             XIT('  Betao ',-6 )
          END DO

***        PROCESS REMAINING LEVELS

          DO L=TOP+INC,BOT,INC

              CURR = (L-1)*NWDS

              BETA(CURR+1:CURR+NWDS) = MERGE( 0.0, 1.0,
     +        BETA(PREV+1:PREV+NWDS) < 1.0 )

              DO  I=1,NWDS

                  GZM = PHI(PREV+I)*PHICON
                  GZ  = PHI(CURR+I)*PHICON

                  IF (PHIS(I) >= GZ  .AND.
     +                PHIS(I) <  GZM )                         THEN
    
                      PS(I) = EXP( A(L-INC) + ( PHIS(I)-GZM )*DA(L)
     +                                        /  ( GZ-GZM ) )

                      IF (PS(I) <= PRH(L))                     THEN
                          BETA(PREV+I) = ( PS(I)-PRH(L-INC) )/DP(L-INC)
                          BETA(CURR+I) =   0.0
                      ELSE
                          BETA(CURR+I) = ( PS(I)-PRH(L    ) )/DP(L    )
                      END IF

                  END IF

              END DO

              IF (L == BOT)                                    THEN

***                SPECIAL PROCESSING FOR LAST HALF LAYER
***                - ASSUME SAME Z-P RELATION AS FOR LAYER JUST ABOVE

                  DO  I=1,NWDS

                      GZM = PHI(PREV+I)*PHICON
                      GZ  = PHI(CURR+I)*PHICON
                      
                      IF (PHIS(I) < GZ)                        THEN

                           PS(I)   = EXP(   A(BOT-INC)
     +                             +      ( PHIS(I)-GZM )*DA(L)
     +                             /         ( GZ-GZM )
     +                                  )
                           BETA(CURR+I) = ( PS(I)-PRH(BOT) )/DP(BOT)

                      END IF

                  END DO

              ELSE

                  PREV = CURR

              END IF

          END DO

***        PUT BETA ON FILE 3 (PACKED 32 BITS/WORD).

          READ(CBETA,4) IBUF(3)
          IBUF(8) = -32

          CALL PUTSET2( 3, BETA,LEV,NLEV, IBUF,MAXW )

          IF (NSETS == 0) CALL PRTLAB( IBUF )
          
***        PUT PS ON FILE 4 (PACKED 32 BITS/WORD)

          READ(CPS,4) IBUF(3)
          IBUF(8) = -32
          IBUF(4) =  0

          CALL PUTFLD2( 4, PS, IBUF,MAXW )

          IF (NSETS.EQ.0) CALL PRTLAB( IBUF )
          
      NSETS = NSETS+1
      GOTO 200

 1000 CONTINUE

*---------------------------------------------------------------------
 0004 FORMAT(A4)

 6005 FORMAT('... Betao: geopotential input file is empty.')
 6009 FORMAT(/' Only pressure vertical coordinate is supported.')
 6010 FORMAT(/' PHIS,PHI= ',A,1X,A,', not recognized or of mixed type.')
 6011 FORMAT(/' Pressure levels are not monotonously increasing.')

 6100 FORMAT(' Betao on ',A)
 6200 FORMAT(' ',I6,' sets were processed.')

      END
#     endif
