#     if defined (AUTO_DOC)
*
*     CALL SEQUENCE...
*      loge  XIN XOUT OUTPUT
*
*
*     AUTHOR - J.D.Henderson,  01 JAN 1981.
*     LAST REVISION: $Header: /home/cvs/RMNLIB/utils/rdiag/lspgm/loge.ptn,v 4.12 2014/09/25 20:20:50 dugas Exp $
*
*
*     DESCRIPTION...
*      A CCC FILE ARITHMETIC PROGRAM WHICH...
*
*      PRODUCES FILE  XOUT = LN(XIN). 
*
*     NOTES - 1) XIN IS REAL AND XIN =< 0.  THEN   LN(XIN) = 0.0 
*             2) XIN IS COMPLEX AND XIN = (0,0) THEN LN(XIN) = (0,0)
*             3) XIN FILE VALUES MUST NOT BE SPECTRAL OR FOURIER
*
*
*     EXIT CONDITIONS...
*       0 NO PROBLEMS
*       1 MORE THAN ONE SIZE IN FILE XIN
*       2 FOUND SPECTRAL OR FOURIER DATA TYPES
*       3 UNABLE TO READ FILE X
#     endif
#     if defined (RDIAG_LICENCE)
!---------------------------------- LICENCE BEGIN -------------------------------
! R.DIAG - Diagnostic tool kit for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This code is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
#     endif
#     if !defined (NO_SOURCE)
      PROGRAM loge
 
*     $Log: loge.ptn,v $
*     Revision 4.12  2014/09/25 20:20:50  dugas
*     Inserer le texte de la licence LPGPL 2.1 pour R.DIAG.
*
*     Revision 4.11  2010/02/15 22:43:47  dugas
*     Utiliser la fonction intrinseque MERGE plutot que CVMGT.
*
*     Revision 4.10  2008/05/03 21:06:30  dugas
*     Modification generale pour r.gppf.
*
*     Revision 4.9  2007/12/20 21:19:13  dugas
*     - Utiliser ALLOCATE/DEALLOCATE plutot que HPALLOC/HPDEALLC.
*     - Faire appel aux routines PRTLAB/PRTLAB2.
*
*     Revision 4.8  2005/04/14 18:30:27  dugas
*     - Ignorer les enregistrements de type LABL/CHAR.
*     - Assurer une allocation minimale a la lecture de MAXW mots.
*
*     Revision 4.7  2003/09/15 15:51:15  dugas
*     Enlever toutes references a MEMOIR.
*     Corriger le traitement du cas ou ABS( valeur complexe ) est trop petit.
*
*     Revision 4.6  2003/07/05 14:50:28  dugas
*     Implanter SETRABT pour le traitement de RECABT.
*
*     Revision 4.5  2000/03/20 20:16:04  armnrbd
*     Remplace l'intrinseque IMAG par AIMAG.
*
*     Revision 4.4  1998/07/03 02:26:32  armnrbd
*     Allonger le format d'ecriture de la date sur le listing.
*
*     Revision 4.3  1997/09/26  17:39:07  armnrbd
*     Remplacer buf(16) par buf(taille_entete).
*
*     Revision 4.2  1996/02/29  20:44:21  armnrbd
*     Imprimer plus d'informations lors du traitement du cas MAXW=0
*     et aussi quand le programme se mets a ignorer les LABLs.
*
*     Revision 4.1  1995/02/13  19:49:05  armnrbd
*     Modifier l'indice de la boucle de calcul principal.
*
*     Revision 4.0  94/11/17  14:20:57  armnrbd
*     Messages informatifs quand au passage de la version 3.x a 4.0...
*     1) Les espaces en debut des noms de variables de sont plus pertinents.
*     2) Les grilles complexes de type CMPL sont maintenant supportees.
*     3) Les fichiers SQI sont reconnus, lus et ecrit directements.
*     4) Plusieurs nouvelles cles sont disponibles au demarrage.
*     
*     Revision 3.1  94/08/16  21:04:16  armnrbd
*     Enlever certaines references aux routines I/O Fortran.
*     
*     Revision 3.0  93/10/13  13:56:29  armnrbd
*     Premiere version compatible HP-UX.
*     
*     Revision 1.5  92/11/23  14:26:08  armnrbd
*     Deuxieme iteration avec GETSIZ/GETSIZ2.
*     
*     Revision 1.4  92/11/12  16:32:34  armnrbd
*     Implantation de GETSIZ/GETSIZ2.
*     
*     Revision 1.2  92/10/13  15:57:14  armnrbd
*     Definir JBUF(8)=-32, plutot que JBUF(8)=1.
*
*     Revision 1.1  92/03/18  10:33:18  armnrbd
*     Ajouter la documentation automatique.
*     
*     Revision 1.0  92/02/24  14:41:50  armnrbd
*     Initial revision
*     
***    MAY 14 1983 - R.LAPRISE **ET** NOV 27 1980 - J.D.HENDERSON 

***    HISTORIQUES DES MODIFICATIONS:

***    14 NOV 1990 - B.DUGAS, RPN : VERSION CY920.
***    11 DEC 1990 - B.DUGAS, RPN : ALLOCATION DYNAMIQUE DE MEMOIRE.
***    18 JAN 1991 - B.DUGAS, RPN : AJOUTER UN APPEL A GETLIGN.
***    05 MAI 1991 -    "      "  : UTILISER GETSET2 PLUTOT QUE GETFLD2.

*---------------------------------------------------------------------
      IMPLICIT    none

      INTEGER     MAXLEV
      PARAMETER ( MAXLEV = 999 )

      REAL        ZERO
      COMPLEX     CMPL
      LOGICAL     OK,SPEC 
      CHARACTER   TYPE*4,MESSAG*10
      INTEGER     HEAD,JBUF(taille_entete), LEV(MAXLEV),NF,
     +            LEN,NWDS,MAXW,JPAK,NLEV,NLEVG,NR,I,IER

      INTEGER,    DIMENSION(:), ALLOCATABLE :: IBUF
      REAL,       DIMENSION(:), ALLOCATABLE :: G

      INTEGER     GETSIZ2
      EXTERNAL    GETSIZ2,MACSPE,JCLPNT,
     +            GETSET2,XIT,CMPLBL,PUTSET2

      CHARACTER   NOMPRG*256
      COMMON     /PROGNAM/ NOMPRG

      DATA        MESSAG / 'AUCUN' /
*====================================================================

      NOMPRG =
     +'$Source: /home/cvs/RMNLIB/utils/rdiag/lspgm/loge.ptn,v $'

*---------------------------------------------------------------------
***    ALLER CHERCHER QUELQUES CONSTANTES SPECIFIQUES.

      CALL MACSPE( HEAD,ZERO )
      CALL SETRABT( '&NON' )

***    ACCEDER LES FICHIERS D'E/S.

      NF = 4
      CALL JCLPNT( NF, 1,2, 5,6 )

***    ASK FOR NECESSARY MEMORY. READ FIRST SET OF INFO BUFFERS.

  050 MAXW = GETSIZ2( 1, JBUF,LEN,NWDS,JPAK, LEV,NLEV )
      IF (MAXW.LE.0) GOTO 904

      WRITE(TYPE,4) JBUF(1)
      IF (TYPE.EQ.'ZONL') NWDS = JBUF(5)

      ALLOCATE( IBUF(LEN),G(MAX( MAXW,NWDS*NLEV )) )

      IF (NR.NE.0) CALL PRTLAB( JBUF )

***    READ THE NEXT SET OF GRIDS FROM FILE XIN. 

      NR = 0
  100 CALL GETSET2( 1, G,LEV,NLEVG, IBUF,MAXW,OK )

          IF (.NOT.OK)                                         THEN

              IF (MAXW.EQ.0)                                   THEN
                  DEALLOCATE( IBUF,G )
                  GOTO 050
              END IF

              CALL PRTLAB( IBUF )
              WRITE(6,6010) NR
              CALL                                 XIT('  Loge  ', 0 ) 

          END IF

***        BY-PASS (I.E. STRIP) LABEL/CHARACTER RECORDS.

          WRITE(TYPE,4) IBUF(1) 
          IF (TYPE.EQ.'LABL' .OR. TYPE.EQ.'CHAR')              THEN
              IF (MESSAG.NE.'deja donne')                      THEN
                  WRITE(6,6035)
                  MESSAG  = 'deja donne'
              END IF
              GOTO 100
          END IF

          IF (NR.EQ.0) CALL PRTLAB( IBUF )

***        VERIFY SIZES.

          CALL CMPLBL( 0,JBUF, 0,IBUF, OK )

          IF (.NOT.OK .OR. NLEV.LT.NLEVG)                      THEN
              CALL PRTLAB( IBUF )
              CALL                                 XIT('  Loge  ',-1 ) 
          END IF

***        STOP IF FIELD IS COMPLEX.

          SPEC = (TYPE.EQ.'SPEC' 
     +    .OR.    TYPE.EQ.'FOUR')

          IF (SPEC) CALL                           XIT('  Loge  ',-2 ) 
 
***        SET G = LN( G ).

          IF (TYPE.EQ.'CMPL')                                  THEN
              DO  I=1,NWDS*NLEVG,2
                  CMPL   = CMPLX( G(I),G(I+1) )
                  IF (ABS( CMPL ).GT.0.0)                      THEN
                      CMPL   = LOG( CMPL )
                      G(I)   = REAL( CMPL )
                      G(I+1) = AIMAG( CMPL )
                  END IF
              END DO
          ELSE
              G(1:NWDS*NLEVG) = MERGE( 1.0, G(1:NWDS*NLEVG),
     +                                      G(1:NWDS*NLEVG) <= 0. ) 
              G(1:NWDS*NLEVG) = LOG( G(1:NWDS*NLEVG) ) 
          END IF
 
***        SAVE G ON FILE XOUT.

          CALL PUTSET2( 2, G, LEV,NLEVG, IBUF,MAXW )

      NR = NR+NLEVG
      GOTO 100 

***   E.O.F. ON UNIT #1.

  904 CALL                                        XIT('  Loge  ',-3 )

*---------------------------------------------------------------------
    4 FORMAT(A4)

 5010 FORMAT(10X,E10.0)
 6010 FORMAT('0 Loge read',I6,' records.')
 6035 FORMAT(' Loge is stripping label/character records...')

      END 
#     endif
