#     if !defined (lm_maximal)
#         define   lm_maximal 4999
#     endif
#     if defined (AUTO_DOC)
*
*     CALL SEQUENCE...
*      splapl  IN OUT OUTPUT
*
*
*     DESCRIPTION...
*      splapl - CALCULATES LAPLACIAN OF SPECTRAL INPUT FILE
*
*
*     AUTHOR  - B.Dugas, JUL 22/86.
*     LAST REVISION: $Header: /home/cvs/RMNLIB/utils/rdiag/lspgm/splapl.ptn,v 4.13 2014/09/25 20:20:53 dugas Exp $
*
*
*     PURPOSE - CALCULATES THE LAPLACIAN IN FILE (OUT) OF THE INPUT 
*               FILE (IN) BY MULTIPLYING IT BY (-N(N+1)/A**2)
*
*     NOTE    - ALL RECORDS ARE TO BE OF THE SAME SIZE AND TYPE.
*
*
*     INPUT FILE...
*      IN  =  CCRN FORMAT SPECTRAL FILE
*
*     OUTPUT FILE...
*      OUT = FILE CONTAINING THE LAPLACIAN OF THE INPUT FILE
*
*
*     EXIT CONDITIONS...
*      0 NO PROBLEMS
*      1 PROBLEMS READING IN
*      2 UNABLE TO DETERMINE SPECTRAL PARAMETRES
*      32 MORE THAN ONE SIZE
#     endif
#     if defined (RDIAG_LICENCE)
!---------------------------------- LICENCE BEGIN -------------------------------
! R.DIAG - Diagnostic tool kit for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This code is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
#     endif
#     if !defined (NO_SOURCE)
      PROGRAM splapl
*    +         (      IN,       OUT,       OUTPUT,
*    +          TAPE1=IN, TAPE2=OUT, TAPE6=OUTPUT)
*     --------------------------------------------

*     $Log: splapl.ptn,v $
*     Revision 4.13  2014/09/25 20:20:53  dugas
*     Inserer le texte de la licence LPGPL 2.1 pour R.DIAG.
*
*     Revision 4.12  2013/10/16 19:57:21  bernard
*      - Utiliser le lm_maximal pour definir la valeur de MAXM
*      - Declarations 'a la' F90
*
*     Revision 4.11  2013/02/07 21:57:11  bernard
*     Corrections pour GFORTRAN.
*
*     Revision 4.10  2008/05/03 21:06:30  dugas
*     Modification generale pour r.gppf.
*
*     Revision 4.9  2007/12/20 21:19:13  dugas
*     - Utiliser ALLOCATE/DEALLOCATE plutot que HPALLOC/HPDEALLC.
*     - Faire appel aux routines PRTLAB/PRTLAB2.
*
*     Revision 4.8  2003/05/23 20:32:46  dugas
*     Augmenter la taille du macro "grille_maximale"" a 300000
*      mots et corriger la verifications des noms de variables.
*
*     Revision 4.7  2000/09/13 12:52:21  armnrbd
*     Allocation utilisant l'information fournie par GETSIZ.
*
*     Revision 4.6  2000/09/12 14:07:38  armnrbd
*     Augmenter la valeur de MAXW.
*
*     Revision 4.5  1999/10/05 21:21:26  armnrbd
*     Le nom de la variable depend du type de fichier par defaut.
*
*     Revision 4.4  1998/07/03 02:26:39  armnrbd
*     Allonger le format d'ecriture de la date sur le listing.
*
*     Revision 4.3  1998/05/20  15:18:11  armnrbd
*     Augmenter la valeur de MAXW.
*
*     Revision 4.2  1997/05/30  18:04:36  armnrbd
*     Conversions de noms/unites seulement pour fichiers SQ89.
*
*     Revision 4.1  1996/02/06  02:54:47  armnrbd
*     Remplacer le nom QQ par QR.
*
*     Revision 4.0  1994/11/17  14:21:49  armnrbd
*     Messages informatifs quand au passage de la version 3.x a 4.0...
*     1) Les espaces en debut des noms de variables de sont plus pertinents.
*     2) Les grilles complexes de type CMPL sont maintenant supportees.
*     3) Les fichiers SQI sont reconnus, lus et ecrit directements.
*     4) Plusieurs nouvelles cles sont disponibles au demarrage.
*
*     Revision 3.1  94/05/30  12:12:26  armnrbd
*     Remplacer GETBUF2 par GETSIZ.
*     
*     Revision 3.0  93/10/13  13:57:03  13:57:03  armnrbd (Bernard Dugas)
*     Premiere version compatible HP-UX.
*     
*     Revision 1.3  93/08/04  15:55:27  15:55:27  armnrbd (Bernard Dugas)
*     Utiliser CLRLMT dans les calculs de lrlmt.
*     
*     Revision 1.2  92/11/10  22:28:02  armnrbd
*     Implantation de GETSIZ/GETSIZ2.
*     
*     Revision 1.1  92/04/29  15:08:15  armnrbd
*     Ajouter la documentation automatique.
*     
*     Revision 1.0  92/02/24  14:41:56  armnrbd
*     Initial revision
*     
*     NOV 26/90 - B.DUGAS, RPN. (VERSION CY920/IRIX F77)
*     MAI 10/89 - B.DUGAS  (CONSIDERER LE CAS T100)
*     JUL 22/86 - B.DUGAS.

*-----------------------------------------------------------------------------
      IMPLICIT    none

      INTEGER,    PARAMETER :: MAXLM = lm_maximal
      INTEGER,    PARAMETER :: HEAD = taille_entete

      LOGICAL     OK
      REAL(8)     CONST
      CHARACTER*4 NOM,LAPL,VORT,DIV
      INTEGER     LSR(2,MAXLM),NR,NF,LA,I,L,
     +            LAF,LAP,LAN,LR,LM,KTR,
     +            LRLMT,KIND,IER,JBUF(HEAD),
     +            MAXW,LEN,JPAK,NWDS

      INTEGER,    DIMENSION(:), ALLOCATABLE :: IBUF
      REAL*8,     DIMENSION(:), ALLOCATABLE :: G,ALPHA

      LOGICAL,    EXTERNAL :: SETIO64
      INTEGER,    EXTERNAL :: GETSIZ,CLRLMT
      EXTERNAL    JCLPNT,XIT,DIMGT2,GETFLD2,CALPHA,PUTFLD2

      CHARACTER   NOMPRG*256
      COMMON     /PROGNAM/ NOMPRG

      DATA        CONST / -2.46351E-14 /
      DATA        VORT  /    'VORT'    /,  
     +            DIV   /    'DIV'     /, 
     +            LAPL  /    'LAPL'    /
*===================================================================

      NOMPRG =
     +'$Source: /home/cvs/RMNLIB/utils/rdiag/lspgm/splapl.ptn,v $'

*-----------------------------------------------------------------------
***    ACCEDER LES FICHIERS D'E/S.

      NF   = 3
      CALL JCLPNT(NF, 1,2, 6 )

      NR = 0

***    SETUP FOR 64-BIT I/O.

      OK = SETIO64(.TRUE.)

***    READ FIRST INFORMATION BUFFER
***    AND ALLCATE WORKING ARRAYS.

      MAXW = GETSIZ( 1, JBUF,LEN,NWDS,JPAK )
      IF (MAXW.EQ.0) CALL                          XIT(' Splapl ',-1 )

      ALLOCATE( IBUF(LEN),G(MAXW),ALPHA(MAXW) )

***    DETERMINE KIND OF SPECTRAL FIELDS (FULL OR OTHERWISE).

      LA    = JBUF(5)
      LRLMT = JBUF(7)

      CALL DIMGT2( LSR, LAF,LR,LM,KTR,LRLMT,  0,-1 )
      CALL DIMGT2( LSR, LAP,LR,LM,KTR,LRLMT, +1,-1 )
      CALL DIMGT2( LSR, LAN,LR,LM,KTR,LRLMT, -1,-1 )
  
      IF (LA.EQ.LAF)                                           THEN
          KIND =  0
      ELSE IF (LA.EQ.LAN)                                      THEN
          KIND = -1
      ELSE IF (LA.EQ.LAP)                                      THEN
          KIND = +1
      ELSE
          WRITE(6,6002) LA,LRLMT
          CALL                                     XIT(' Splapl ',-2 )
      END IF

      WRITE(NOM,4) JBUF(3)

      IF (NOM.EQ.'PP' .OR.
     +    NOM.EQ.'CC')                                         THEN
          VORT = 'QR'
          DIV  = 'DD'
      END IF

***    COMPUTE THE COMPLEX ARRAY ALPHA(N,M).
  
      CALL DIMGT2( LSR, LA,LR,LM,KTR,LRLMT, KIND,0 )
      CALL CALPHA(ALPHA,LSR,LM,LA,          KIND )

      DO 100 L=1,2*LA-1,2
          ALPHA(L) = ALPHA(L)*CONST
  100 CONTINUE

***    READ RECORDS FROM INPUT.
  
  200 CALL GETFLD2( 1, G, 'SPEC',-1,' ',-1, IBUF,MAXW,OK )
  
          IF (.NOT.OK)                                         THEN
              WRITE(6,6020) NR
              IF (NR.EQ.0) CALL                    XIT(' Splalp ',-1 )
              CALL PRTLAB( IBUF )
              CALL                                 XIT(' Splalp ', 0 )
          END IF
  
***        CHECK DIMENSIONS.

          IF (IBUF(5).NE.LA   .OR. 
     +       (IBUF(7).NE.CLRLMT(LR,LM,KTR,.TRUE.).AND.
     +        IBUF(7).NE.CLRLMT(LR,LM,KTR,.FALSE.)))
     +        CALL                                 XIT(' Splapl ',-3 )

***        MULTIPLY G BY ALPHA.
  
          DO 300 I=1,2*LA-1,2 
              G(I)   = G(I)  *ALPHA(I)
              G(I+1) = G(I+1)*ALPHA(I)
  300     CONTINUE
  
***        IF INPUT NAME IS NEITHER OF 'CHI' OR 'PSI',
***        SAVE RECORD UNDER THE NAME LAPL. IN THE OTHER
***        TWO CASES, OUTPUT NAME IS 'DIV' OR 'VORT'.
  
          WRITE(NOM,4) IBUF(3)

          IF (NOM.NE.'CHI' .AND.
     +        NOM.NE.'PSI' .AND.
     +        NOM.NE.'CC'  .AND.
     +        NOM.NE.'PP'  )                                   THEN
                                        READ(LAPL,4) IBUF(3)
          ELSE
     +    IF (NOM.EQ.'PSI' .OR.
     +        NOM.EQ.'PP')                                     THEN
                                        READ(VORT,4) IBUF(3)
          ELSE
     +    IF (NOM.EQ.'CHI' .OR.
     +        NOM.EQ.'CC')                                     THEN
                                        READ(DIV ,4) IBUF(3)
          END IF

          Call PUTFLD2( 2, G, IBUF,MAXW )

          IF (NR.EQ.0) CALL PRTLAB( IBUF )
  
      NR = NR+1
      GOTO 200
  
*-----------------------------------------------------------------------
    4 FORMAT(A4)

 6002 FORMAT(' Unable to determine some of the spectral ',
     +       ' parametres associated to LA,LRLMT =',I8,I10)
 6020 FORMAT(' Splalp produced ',I6,' records.')

      END 
#     endif
