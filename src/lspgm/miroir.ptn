#     if defined (AUTO_DOC)
*
*     SEQUENCE D'APPEL...
*      miroir  IN OUT INPUT OUTPUT [ -kind VAL1 ]
*
*
*     AUTEUR - B.Dugas, MAI 04/89.
*     LAST REVISION: $Header: /home/cvs/RMNLIB/utils/rdiag/lspgm/miroir.ptn,v 4.6 2014/09/25 20:20:51 dugas Exp $
*
*
*     DESCRIPTION...
*       SELON LA VALEUR DU PARAMETRE LU EN ENTREE (+1. OU -1.),  L'AUTRE 
*       HEMISPHERE EST SOIT,  REPRODUITE EXACTEMENT (+1.)  OU BIEN, ELLE
*       EST PREALABLEMENT  PRE-MULTIPLIEE (PAR -1.) AVANT D'ETRE TRANSPO-
*       SEE. DANS LES DEUX CAS, L'HEMISPHERE ORIGINALE N'EST PAS MODIFIEE
*
*
*     PARAMETRE...
*      CONST (kind) = TYPE DE MIROIR DESIRE (+1. OU -1.)
*
*      READ( 5,5000 ) CONST
*5010  FORMAT(10X,E10.0)
*
*
*     EXEMPLE DE LIGNE D'APPEL...
*
* MIROIR        -1.0
*
*        0123456789012345678901234567890123456789012345678901234567890
*        1         2         3         4         5         6         7
*
*
*     EXIT CONDITIONS...
*       0 NO PROBLEMS
*       1 DATA TYPE IS NOT GRID OR DATA IS ALREADY GLOBAL
*       2 PREMATURE EOF ON FILE IN
*       3 MORE THAN ONE SIZE FOR ARRAYS IN FILE IN
*       4 ERROR READING INPUT PARAMETERS
#     endif
#     if defined (RDIAG_LICENCE)
!---------------------------------- LICENCE BEGIN -------------------------------
! R.DIAG - Diagnostic tool kit for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This code is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
#     endif
#     if !defined (NO_SOURCE)
      PROGRAM miroir
*    1              (      IN,       OUT,       INPUT,       OUTPUT,
*    2               TAPE1=IN, TAPE2=OU1, TAPE5=INPUT, TAPE6=OUTPUT)
  
*     $Log: miroir.ptn,v $
*     Revision 4.6  2014/09/25 20:20:51  dugas
*     Inserer le texte de la licence LPGPL 2.1 pour R.DIAG.
*
*     Revision 4.5  2008/05/03 21:06:30  dugas
*     Modification generale pour r.gppf.
*
*     Revision 4.4  2007/12/20 21:19:13  dugas
*     - Utiliser ALLOCATE/DEALLOCATE plutot que HPALLOC/HPDEALLC.
*     - Faire appel aux routines PRTLAB/PRTLAB2.
*
*     Revision 4.3  2003/09/15 15:49:33  dugas
*     Enlever toutes references a MEMOIR.
*
*     Revision 4.2  1998/10/20 18:23:57  armnrbd
*     Implanter le support de RPBLOC.
*
*     Revision 4.1  1997/09/26  17:39:09  armnrbd
*     Remplacer buf(16) par buf(taille_entete).
*
*     Revision 4.0  1994/11/17  14:21:07  armnrbd
*     Messages informatifs quand au passage de la version 3.x a 4.0...
*     1) Les espaces en debut des noms de variables de sont plus pertinents.
*     2) Les grilles complexes de type CMPL sont maintenant supportees.
*     3) Les fichiers SQI sont reconnus, lus et ecrit directements.
*     4) Plusieurs nouvelles cles sont disponibles au demarrage.
*
*     Revision 3.0  93/10/13  13:56:32  armnrbd
*     Premiere version compatible HP-UX.
*     
*     Revision 1.2  92/11/10  15:41:10  15:41:10  armnrbd (Bernard Dugas)
*     Implantation de GETSIZ/GETSIZ2.
*     
*     Revision 1.1  92/05/01  15:54:20  armnrbd
*     Ajouter la documentation automatique.
*     
*     Revision 1.0  92/02/24  14:41:50  armnrbd
*     Initial revision
*     
***    JAN 17/91 - B. DUGAS, RPN. (CALL TO GETLIGN ADDED)
***    NOV 28/90 - B. DUGAS, RPN. (VERSION CY920/IRIX F77)
***    MAI 04/89 - B. DUGAS
  
***    IN  = GRILLES HEMISPHERIQUES TYPIQUES.
***    OUT = GRILLES MIROIRS (+ OU -) GLOBALES CORRESPONDANTES.
  
***    MODIFIEE LE 07 MAI 1989 PAR B.DUGAS ...
***     ...  CORRECTION D'UN BOGUE MAJEUR DANS LA BLOUCLE 200.
  
*--------------------------------------------------------------
      IMPLICIT    none
  
      LOGICAL     OK
      REAL        ZERO,CONST
      CHARACTER   KIND*4,LIGNE*80
      INTEGER     JBUF(taille_entete),HEAD, TYPE,WHERE, HEM,
     +            NF,IO,ILG,ILAT,ILATH,LEN,NWDS,NPAK,MAXW,NS,
     +            MEM1,MEM2,I,J,IJ1,IJ2,IER

      INTEGER,    DIMENSION(:), ALLOCATABLE :: IBUF
      REAL,       DIMENSION(:), ALLOCATABLE :: F

      LOGICAL     RPBLOC
      INTEGER     GETSIZ
      EXTERNAL    MACSPE,JCLPNT,GETSIZ,XIT,LBLCHK,
     +            GETFLD2,PUTFLD2,RPBLOC

      CHARACTER   NOMPRG*256
      COMMON     /PROGNAM/ NOMPRG
*===================================================================

      NOMPRG =
     +'$Source: /home/cvs/RMNLIB/utils/rdiag/lspgm/miroir.ptn,v $'

*--------------------------------------------------------------
***    ALLER CHERCHER QUELQUES CONSTANTES SPECIFIQUES.

      CALL MACSPE( HEAD,ZERO )

***    ACCEDER LES FICHIERS D'E/S.

      NF = 4
      CALL JCLPNT (NF, 1,2, 5,6 )
  
      IF (RPBLOC( ' ',LIGNE ))                                 THEN

***        CHECK PARAMETRE BLOCK.

          CONST = +1.0 

          OK = RPBLOC('KIND',LIGNE)
          IF (OK) READ( LIGNE, 0010, ERR=900,END=901,IOSTAT=IO ) CONST

      ELSE

***        DETERMINER LE TYPE DE MIROIR DESIRE (+1. OU -1.).
  
          CALL GETLIGN( 5,LIGNE,80,OK )

          IF (.NOT.OK)                                             THEN  
             GOTO 901
          ELSE
             READ( LIGNE, 5000,ERR=900,END=901,IOSTAT=IO) CONST
             CALL BURNF
          END IF
  
      END IF

      IF (CONST.EQ.0.0) CONST = +1.0
      CONST = CONST/ABS(CONST)
  
      WRITE(6,6100) CONST
  
***    QUELLE SORTE DE DONNEES DANS IN ?
  
      MAXW = GETSIZ( 1, JBUF,LEN,NWDS,NPAK )
      IF (MAXW.EQ.0) GOTO 902
  
      TYPE  = JBUF(1)
      ILG   = JBUF(5)
      ILATH = JBUF(6)
      ILAT  = ILATH*2
      HEM   = JBUF(7)

      WRITE(KIND,4) TYPE
      IF (KIND.NE.'GRID' .OR. HEM.EQ.0) CALL       XIT(' Miroir ',-1 )

***    DETERMINER LA QUANTITE DE MEMOIRE REQUISE ET ...
  
      JBUF(6) = ILAT

      CALL LBLCHK( LEN, NWDS,NPAK,JBUF )
      MAXW = LEN-HEAD
  
      MEM1 = LEN
      MEM2 = NWDS
  
***    ... EN FAIRE LA DEMANDE.
  
      ALLOCATE( IBUF(MEM1),F(MEM2) )
  
***    DEBUT DE LA GRILLE D'ENTREE.
  
      IF (HEM.EQ.2)                                            THEN
          WHERE = 1
      ELSE
          WHERE = ILATH*ILG+1
      END IF
  
***    ALLER LIRE LES DONNEES ET LES TRANSPOSER. 
  
      NS = 0
  
  100 CALL GETFLD2( 1, F(WHERE),'GRID',-1,' ',-1, IBUF,MAXW,OK )
  
          IF (.NOT.OK)                                         THEN
                              WRITE(6,6020)  NS
                              CALL PRTLAB2(' Last record out : ',IBUF )
              IF (NS.EQ.0)    CALL           XIT(' Miroir ',-2 )
                              CALL           XIT(' Miroir ', 0 ) 
          END IF
  
          IF (IBUF(5).NE.ILG   .OR.
     1        IBUF(6).NE.ILATH .OR.
     2        IBUF(7).NE.HEM      )                            THEN
                              CALL PRTLAB2(' Last record out : ',IBUF )
                              CALL           XIT(' Miroir ',-3 )
          END IF
  
***        GLOBALISER LA GRILLE.
  
          DO 200 J=1,ILATH
              IF (HEM.EQ.2)                               THEN
                  IJ1 = ( J  -1)*ILG
                  IJ2 = (ILAT-J)*ILG
              ELSE
                  IJ1 = (ILAT-J)*ILG
                  IJ2 = ( J  -1)*ILG
              END IF
              DO 200 I=1,ILG
                  F(IJ2+I) = CONST*F(IJ1+I)
  200     CONTINUE
  
          IBUF(6) = ILAT
          IBUF(7) = 0
          CALL PUTFLD2( 2, F, IBUF,MAXW )
  
          NS = NS+1 
  
      GOTO 100
  
***    FIN PREMATUREE DES DONNEES SUR L'UNITE #5.
  
  900 IF (IO.NE.0) WRITE(6,6110) IO
  901 CALL                                         XIT(' Miroir ',-4 )
  
***    FIN PREMATUREE DES DONNEES SUR L'UNITE #1.
  
  902 CALL                                         XIT(' Miroir ',-2 )

*-----------------------------------------------------------------
 0004 FORMAT(A4)
 0010  FORMAT(BN,E10.0)

 5000 FORMAT(10X,E10.0)

 6020 FORMAT('0Miroir produced ',I5,' global record(s).')
 6100 FORMAT('0Conversion factor before mirrorring is ... ',F10.5)
 6110 FORMAT(' Miroir reports I/O error number ',I3,' on unit 5.')

      END 
#     endif
