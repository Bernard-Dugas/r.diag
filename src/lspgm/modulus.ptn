#     if defined (AUTO_DOC)
*
*     CALL SEQUENCE...
*      modulus  XIN XOUT OUTPUT
*
*
*     AUTHOR - B.Dugas, 19 fevrier 1998.
*     LAST REVISION: $Header: /home/cvs/RMNLIB/utils/rdiag/lspgm/modulus.ptn,v 4.7 2014/09/25 20:20:51 dugas Exp $
*
* 
*     PURPOSE - CALCULATE THE MODULUS OF ANY NUMERICAL INPUT FIELD.
* 
*
*     INPUT FILE... 
*      XIN  = FILE OF FIELDS
* 
*     OUTPUT FILE... 
*      XOUT = FILE CONTAINING THE MODULUS OF XIN 
*
*
*     EXIT CONDITIONS...
*       0 NO PROBLEMS
*       1 MORE THAN ONE SIZE FOR XIN ARRAYS
*       2 UNABLE TO READ FILE XIN
#     endif
#     if defined (RDIAG_LICENCE)
!---------------------------------- LICENCE BEGIN -------------------------------
! R.DIAG - Diagnostic tool kit for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This code is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
#     endif
#     if !defined (NO_SOURCE)
      PROGRAM modulus
*    +            ( XIN,        XOUT,      OUTPUT,
*    +       TAPE1= XIN, TAPE2= XOUT,TAPE6=OUTPUT)
 
*     $Log: modulus.ptn,v $
*     Revision 4.7  2014/09/25 20:20:51  dugas
*     Inserer le texte de la licence LPGPL 2.1 pour R.DIAG.
*
*     Revision 4.6  2008/05/03 21:06:30  dugas
*     Modification generale pour r.gppf.
*
*     Revision 4.5  2008/01/22 22:35:06  dugas
*     Corriger la declaration du champs G.
*
*     Revision 4.4  2007/12/20 21:19:13  dugas
*     - Utiliser ALLOCATE/DEALLOCATE plutot que HPALLOC/HPDEALLC.
*     - Faire appel aux routines PRTLAB/PRTLAB2.
*
*     Revision 4.3  2005/04/14 18:30:27  dugas
*     - Ignorer les enregistrements de type LABL/CHAR.
*     - Assurer une allocation minimale a la lecture de MAXW mots.
*
*     Revision 4.2  2003/07/05 14:50:28  dugas
*     Implanter SETRABT pour le traitement de RECABT.
*
*     Revision 4.1  1998/07/03 02:26:33  armnrbd
*     Allonger le format d'ecriture de la date sur le listing.
*
*     Revision 4.0  1998/02/19  17:19:47  armnrbd
*     Version initiale.
*

***    Calculates the modulus of the first input file.
***    Based on code from the SQUARE program.

*---------------------------------------------------------------------
      IMPLICIT     none

      INTEGER      MAXLEV
      PARAMETER  ( MAXLEV = 999 )

      LOGICAL      OK,SPEC 
      REAL*8       GREAL,GIMAG
      CHARACTER    TYPE*4,MESSAG*10
      INTEGER      JBUF(taille_entete),LEV(MAXLEV),NF,MAXW,
     +             LEN,NWDS,JPAK,NLEV,NLEVG,IER,I,NR

      INTEGER,     DIMENSION(:), ALLOCATABLE :: IBUF
      REAL*8,      DIMENSION(:), ALLOCATABLE :: G

      LOGICAL      SETIO64
      INTEGER      GETSIZ2
      EXTERNAL     GETSIZ2,JCLPNT,SETIO64,
     +             GETSET2,PUTSET2,CMPLBL,XIT

      CHARACTER    NOMPRG*256
      COMMON      /PROGNAM/ NOMPRG

      DATA        MESSAG / 'AUCUN' /
*===================================================================

      NOMPRG =
     +'$Source: /home/cvs/RMNLIB/utils/rdiag/lspgm/modulus.ptn,v $'

*---------------------------------------------------------------------
***    ACCEDER LES FICHIERS D'E/S.

      NR = 0
      NF = 3

      CALL JCLPNT( NF, 1,2, 6 )

      CALL SETRABT( '&NON' )

***    SETUP FOR 64-BIT I/O.

      OK = SETIO64(.TRUE.) 

***    ASK FOR NECESSARY MEMORY. READ FIRST SET OF INFO BUFFERS.

  050 MAXW = GETSIZ2( 1, JBUF,LEN,NWDS,JPAK, LEV,NLEV )
      IF (MAXW.LE.0) GOTO 903

      WRITE(TYPE,4) JBUF(1)
      IF (TYPE.EQ.'ZONL') NWDS = JBUF(5)

      ALLOCATE( IBUF(LEN),G(MAX( MAXW,NWDS*NLEV )) )

      IF (NR.NE.0) CALL PRTLAB( JBUF )

      SPEC = (TYPE.EQ.'SPEC' .OR.
     +        TYPE.EQ.'FOUR' .OR.
     +        TYPE.EQ.'CMPL')

***    READ THE NEXT SET OF GRIDS FROM FILE XIN. 

  100 CALL GETSET2( 1, G,LEV,NLEVG, IBUF,MAXW,OK )

          IF (.NOT.OK)                                         THEN

              IF (MAXW.EQ.0)                                   THEN
                  DEALLOCATE( IBUF,G )
                  GOTO 050
              END IF

              CALL PRTLAB( IBUF )
              WRITE(6,6010) NR
              CALL                                 XIT(' Modulus', 0 ) 

          END IF

***        BY-PASS (I.E. STRIP) LABEL/CHARACTER RECORDS.

          WRITE(TYPE,4) IBUF(1) 
          IF (TYPE.EQ.'LABL' .OR. TYPE.EQ.'CHAR')              THEN
              IF (MESSAG.NE.'deja donne')                      THEN
                  WRITE(6,6035)
                  MESSAG  = 'deja donne'
              END IF
              GOTO 100
          END IF

          IF (NR.EQ.0) CALL PRTLAB( IBUF )

***        VERIFY SIZES.

          CALL CMPLBL( 0,JBUF, 0,IBUF, OK )

          IF (.NOT.OK .OR. NLEV.LT.NLEVG)                      THEN
              CALL PRTLAB( IBUF )
              CALL                                 XIT(' Modulus',-1 ) 
          END IF

***        SET G =  | G |

          IF (SPEC)                                            THEN

              DO  I=1,NLEVG*NWDS,2
                  GREAL  = G(I)
                  GIMAG  = G(I+1)
                  G(I)   = SQRT( GREAL*GREAL+GIMAG*GIMAG )
                  G(I+1) = 0.0
              END DO

          ELSE
 
              DO  I=1,NLEVG*NWDS
                  G(I) = ABS( G(I) )
              END DO

          END IF
 
***        SAVE G ON FILE XOUT.

          CALL PUTSET2( 2, G, LEV,NLEVG, IBUF,MAXW )

      NR = NR+NLEVG
      GOTO 100 

***   E.O.F. ON UNIT #1.

  903 CALL                                         XIT(' Modulus',-2 )

*---------------------------------------------------------------------
    4 FORMAT(A4)

 5010 FORMAT(10X,E10.0)
 6010 FORMAT('0 Modulus read',I6,' records.')
 6035 FORMAT(' Modulus is stripping label/character records...')

      END 
#     endif
