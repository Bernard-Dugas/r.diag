#     if defined (AUTO_DOC)
*
*     CALL SEQUENCE...
*      gglob  GGH GGL INPUT OUTPUT [ -kind VAL1 ]
*
*
*     DESCRIPTION...
*      gglob  - CONVERTS HEMI GRID OR CROSS-SECTION FILE TO GLOBAL
*
*
*     AUTHOR  - J.D.Henderson, DEC 17/80.
*     LAST REVISION: $Header: /home/cvs/RMNLIB/utils/rdiag/lspgm/gglob.ptn,v 4.8 2014/09/25 20:20:48 dugas Exp $
*
*
*     PURPOSE - GLOBALIZES A FILE (GGH) OF  NORTHERN OR SOUTHERN HEMISPHERIC
*               GAUSSIAN GRIDS OR CROSS-SECTIONS AND PUTS THE RESULTS IN GGL
*
*     NOTE    - IF GGH FILE IS ALREADY GLOBAL IT IS JUST COPIED.
*               THE  GENERATED  HEMISPHERE IS FILLED BY SYMMETRY  OR
*               ANTI-SYMMETRY DEPENDING ON THE VALUE OF KSM FOUND ON
*               THE INPUT CARD.
*
*
*     INPUT FILE...
*      GGH = NORTHERN OR SOUTHERN HEMISPHERE GRIDS OR CROSS-SECTIONS
*
*     OUTPUT FILE...
*      GGL = CORRESPONDING GLOBAL GRIDS OR CROSS-SECTIONS
*
*
*     INPUT PARAMETERS...
*
*      KSM (kind) = 1, FOR      SYMMETRIC SOUTHERN HEMISPHERE (DEFAULT)
*                  -1, FOR ANTI-SYMMETRIC SOUTHERN HEMISPHERE
*
*      READ( 5,5010 ) KSM
*5010  FORMAT(10X,I5)
*
*
*     EXAMPLE OF INPUT CARD...
*
* GGLOB       1
*
*
*     EXIT CONDITIONS...
*       0 NO PROBLEMS
*       1 ABORT ERROR READING GGL
*       2 ABORT ERROR READIND INPUT DIRECTIVES
#     endif
#     if defined (RDIAG_LICENCE)
!---------------------------------- LICENCE BEGIN -------------------------------
! R.DIAG - Diagnostic tool kit for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This code is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
#     endif
#     if !defined (NO_SOURCE)
      PROGRAM gglob
*     PROGRAM GGLOB (GGH,       GGL,        INPUT,       OUTPUT,
*    +         TAPE1=GGH, TAPE2=GGL,  TAPE3=INPUT, TAPE6=OUTPUT)
*     --------------------------------------------------------

*     $Log: gglob.ptn,v $
*     Revision 4.8  2014/09/25 20:20:48  dugas
*     Inserer le texte de la licence LPGPL 2.1 pour R.DIAG.
*
*     Revision 4.7  2008/05/03 21:06:30  dugas
*     Modification generale pour r.gppf.
*
*     Revision 4.6  2007/12/20 21:19:13  dugas
*     - Utiliser ALLOCATE/DEALLOCATE plutot que HPALLOC/HPDEALLC.
*     - Faire appel aux routines PRTLAB/PRTLAB2.
*
*     Revision 4.5  1998/10/20 17:43:26  armnrbd
*     Implanter le support de RPBLOC.
*
*     Revision 4.4  1998/07/03  02:26:26  armnrbd
*     Allonger le format d'ecriture de la date sur le listing.
*
*     Revision 4.3  1998/06/08  15:25:14  armnrbd
*     Enlever le code de controle pour NEWL.
*     Ce travail se fait a un niveau plus bas.
*
*     Revision 4.2  1998/05/30  04:14:52  armnrbd
*     Activer le mode de calculs en 64 bits.
*
*     Revision 4.1  1998/05/21  20:20:49  armnrbd
*     Modifier la valeur par defaut de taille_entete
*
*     Revision 4.0  1994/11/17  14:20:22  armnrbd
*     Messages informatifs quand au passage de la version 3.x a 4.0...
*     1) Les espaces en debut des noms de variables de sont plus pertinents.
*     2) Les grilles complexes de type CMPL sont maintenant supportees.
*     3) Les fichiers SQI sont reconnus, lus et ecrit directements.
*     4) Plusieurs nouvelles cles sont disponibles au demarrage.
*
*     Revision 3.0  93/10/13  13:56:11  armnrbd
*     Premiere version compatible HP-UX.
*     
*     Revision 1.1  92/04/12  22:15:57  armnrbd
*     Ajouter la definition de NOMPROG.
*     
*     Revision 1.0  92/04/12  22:04:23  armnrbd
*     Initial revision
*     
*     MAY 11/83 - R.LAPRISE.
*     DEC 17/80 - J.D.HENDERSON

*----------------------------------------------------------------------
      IMPLICIT    none

      INTEGER     HEAD
      PARAMETER ( HEAD = taille_entete )

      LOGICAL     OK,GRID,ZONL
      CHARACTER*4 TYPE,NAME,LIGNE*80
      INTEGER     I,J,L,LJF,LJH,IER,NLEV,KSM,N,NFF,
     +            NR,NLG,NLAT,NLATH,HEM,IO,IJ,IJN,IJS,
     +            JBUF(HEAD),MAXW,LEN,NWDS,JPAK

      INTEGER,    DIMENSION(:), ALLOCATABLE :: IBUF
      REAL*8,     DIMENSION(:), ALLOCATABLE :: GGH,GGF

      INTEGER     GETSIZ
      LOGICAL     SETIO64,RPBLOC
      EXTERNAL    JCLPNT,GETLIGN,BURNF,SETIO64,
     +            GETFLD2,PUTFLD2,XIT,RPBLOC,GETSIZ

      CHARACTER   NOMPRG*256
      COMMON     /PROGNAM/ NOMPRG
*===================================================================

      NOMPRG =
     +'$Source: /home/cvs/RMNLIB/utils/rdiag/lspgm/gglob.ptn,v $'

*---------------------------------------------------------------------
      NFF = 4
      CALL JCLPNT( NFF, 1,2, 5,6 )

      OK = SETIO64( .TRUE. )

      IF (RPBLOC( ' ',LIGNE ))                                 THEN

***        CHECK PARAMETRE BLOCK.

          KSM = +1

          OK = RPBLOC('KIND',LIGNE)
          IF (OK) READ( LIGNE, 0005, ERR=902,END=902,IOSTAT=IO ) KSM

      ELSE

***        READ SYMMETRY INFORMATION KSM.
 
          CALL GETLIGN( 5,LIGNE,80,OK )

          IF (.NOT.OK)                                         THEN
              GOTO 902
          ELSE
              READ( LIGNE, 5010,ERR=902,END=902,IOSTAT=IO) KSM
              CALL BURNF
          END IF

      END IF

      IF (KSM.GE.0)                                            THEN
          KSM = +1
      ELSE
          KSM = -1
      END IF

      WRITE(6,6000) KSM

      MAXW = GETSIZ( 1, JBUF,LEN,NWDS,JPAK )

      ALLOCATE( IBUF(4*LEN),GGH(  MAX( MAXW,NWDS )),
     +                      GGF(2*MAX( MAXW,NWDS )) )

***     GET THE NEXT HEMISPHERIC GRID FROM FILE 1.

      NR = 0

  100 CALL GETFLD2( 1, GGH, ' ',-1,' ',-1, IBUF,MAXW,OK )

          IF (.NOT.OK)                                         THEN
              WRITE(6,6100) NR
              IF (NR.EQ.0)                                     THEN
                  CALL                             XIT('  Gglob ',-1 )
              ELSE
                  CALL                             XIT('  Gglob ', 0 )
              END IF
          END IF

***        PROCESS ONLY GRIDS OR CROSS SECTIONS.

          WRITE(TYPE,4) IBUF(1)
          WRITE(NAME,4) IBUF(3)

          HEM   =  IBUF(7)

          GRID  = (TYPE .EQ.'GRID')
          ZONL  = (TYPE .EQ.'ZONL')
          OK    = (GRID .OR. ZONL)

          IF (NR.EQ.0) CALL PRTLAB( IBUF )

***        TAKE CARE OF GLOBAL DATA.

          IF (HEM.EQ.0)                                        THEN

              IF (OK)                                          THEN

***                TRANSFER ARRAY TO GLOBAL FILE.

                  CALL PUTFLD2( 2, GGH, IBUF,MAXW )
              
              END IF

              IF (NAME.NE.'++') NR = NR+1
              GOTO 100

          END IF

***        DO THE ACTUAL WORK.

          IF (OK)                                              THEN

              IF (GRID)                                        THEN

                  NLG   = IBUF(5)
                  NLATH = IBUF(6)
                  NLAT  = NLATH*2
                  N     = NLATH*NLG

***                FILL GLOBAL GRID FROM HEMISPHERIC DATA
***                WHILE ACCOUNTING FOR KSM.

                  IF (HEM.EQ.1)                                THEN

                      DO 200 J=1,NLATH
                          IJ  = (      J-1)*NLG
                          IJS = (NLATH-J  )*NLG
                          DO 200 I=1,NLG
                              GGF(  IJS+I) = KSM*GGH(IJ+I)
                              GGF(N+IJ +I) =     GGH(IJ+I)
  200                 CONTINUE

                  ELSE IF (HEM.EQ.2)                           THEN

                      DO 300 J=1,NLATH
                          IJ  = (     J-1)*NLG
                          IJN = (NLAT-J  )*NLG
                          DO 300 I=1,NLG
                              GGF(IJ +I) =     GGH(IJ+I)
                              GGF(IJN+I) = KSM*GGH(IJ+I)
  300                 CONTINUE

                  END IF

              ELSE IF (ZONL)                                   THEN

                  IF (NAME.EQ.'++')                            THEN

***                    SAVE VERTICAL LEVELLING INFORMATION AS IS.

                      IBUF(7) = 0
                      CALL PUTFLD2( 2, GGH, IBUF,MAXW )
                      GOTO 100

                  ELSE

                      NLEV  = IBUF(6)
                      NLATH = IBUF(5)
                      NLAT  = NLATH*2

***                    FILL GLOBAL ZONAL CROSS-SECTIONS
***                    WHILE ACCOUNTING FOR KSM.

                      IF (HEM.EQ.1)                            THEN

                          DO 400 L=1,NLEV
                              LJF = (L-1)*NLAT
                              LJH = (L-1)*NLATH
                              DO 400 J=1,NLATH
                                  GGF(LJF+NLATH-J+1) = KSM*GGH(LJH+J)
                                  GGF(LJF+NLATH+J  ) =     GGH(LJH+J)
  400                     CONTINUE

                      ELSE IF (HEM.EQ.2)                       THEN

                          DO 500 L=1,NLEV
                              LJF = (L-1)*NLAT
                              LJH = (L-1)*NLATH
                              DO 500 J=1,NLATH
                                  GGF(LJF     +J  ) =     GGH(LJH+J)
                                  GGF(LJF+NLAT-J+1) = KSM*GGH(LJH+J)
  500                     CONTINUE

                      END IF

                  END IF

              END IF

***            SAVE GLOBAL GGF ON FILE 2.

                        IBUF(7) = 0
              IF (GRID) IBUF(6) = NLAT
              IF (ZONL) IBUF(5) = NLAT

              CALL PUTFLD2( 2, GGF, IBUF,MAXW )
              IF (NR.EQ.0) CALL PRTLAB( IBUF )

          END IF

      NR = NR+1
      GOTO 100

***    PREMATURE EOF ON STDIN.

  902 IF (IO.NE.0) WRITE(6,6120) IO
      CALL                                        XIT('  Gglob ',-2 )

*---------------------------------------------------------------------

 0004 FORMAT(A4)
 0005  FORMAT(BN,I5)

 5010 FORMAT(10X,I5)

 6000 FORMAT(' Ksm =',I5)
 6100 FORMAT('0',I6,'  records read.')
 6120 FORMAT(' Gglob reports I/O error number ',I3,' on stdin.')

      END
#     endif
