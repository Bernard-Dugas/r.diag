#     if defined (AUTO_DOC)
*
*     CALL SEQUENCE...
*      gghems  GGL GGN GGS OUTPUT
*
*
*     AUTHOR  - J.D.Henderson, DEC 17/80.
*     LAST REVISION: $Header: /home/cvs/RMNLIB/utils/rdiag/lspgm/gghems.ptn,v 4.9 2014/09/25 20:20:48 dugas Exp $
*
*
*     PURPOSE - SPLITS A FILE OF GLOBAL GRIDS OR CROSS-SECTIONS
*               INTO TWO FILES OF NORTHERN AND SOUTHERN HEMISPHERES.
*
*     NOTE    - IF THE FILE IS ALREADY HEMISPHERIC, IT IS ONLY COPIED TO
*               THE CORRESPONDING HEMISPHERIC FILE.
*
*
*     INPUT FILE...
*      GGL = GLOBAL GRIDS OR CROSS-SECTIONS
*            (GLOBAL GAUSSIAN ARRAYS MUST HAVE AN EVEN NUMBER OF LATITUDES)
*
*     OUTPUT FILES...
*      GGN = NORTHERN HEMISPHERE GRIDS OR CROSS-SECTIONS
*      GGS = SOUTHERN HEMISPHERE GRIDS OR CROSS-SECTIONS
*
*
*     EXIT CONDITIONS...
*       0 NO PROBLEMS
*       1 ABORT ERROR READING GGL
*       2 MORE THAN ONE SIZE IN GGL
*       3 UNKNOWN HEMISPHERIC TYPE
*       4 UNEVEN NUMBER OF LATITUDES IN GLOBAL GAUSSIAN ARRAY
#     endif
#     if defined (RDIAG_LICENCE)
!---------------------------------- LICENCE BEGIN -------------------------------
! R.DIAG - Diagnostic tool kit for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This code is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
#     endif
#     if !defined (NO_SOURCE)
      PROGRAM gghems
*     PROGRAM GGHEMS (GGL,       GGN,       GGS,       OUTPUT,
*    1          TAPE1=GGL, TAPE2=GGN, TAPE3=GGS, TAPE6=OUTPUT)
*     --------------------------------------------------------

*     $Log: gghems.ptn,v $
*     Revision 4.9  2014/09/25 20:20:48  dugas
*     Inserer le texte de la licence LPGPL 2.1 pour R.DIAG.
*
*     Revision 4.8  2008/05/03 21:06:30  dugas
*     Modification generale pour r.gppf.
*
*     Revision 4.7  2007/12/20 21:19:13  dugas
*     - Utiliser ALLOCATE/DEALLOCATE plutot que HPALLOC/HPDEALLC.
*     - Faire appel aux routines PRTLAB/PRTLAB2.
*
*     Revision 4.6  2004/11/12 17:06:55  dugas
*     Distinguer entre grilles de type A, B et G.
*
*     Revision 4.5  2001/03/16 22:21:50  armnrbd
*     Ajouter le support des grilles de type L (RPN STD).
*
*     Revision 4.4  1998/07/03 02:26:26  armnrbd
*     Allonger le format d'ecriture de la date sur le listing.
*
*     Revision 4.3  1998/05/21  20:20:48  armnrbd
*     Modifier la valeur par defaut de taille_entete
*
*     Revision 4.2  1997/09/26  17:38:55  armnrbd
*     Remplacer buf(16) par buf(taille_entete).
*
*     Revision 4.1  1997/07/25  21:23:03  armnrbd
*     Utiliser GETSIZ pour l'allocation de memoire dynamique.
*     Ameliorer support des fichiers standards (si IG2=0,1).
*
*     Revision 4.0  1994/11/17  14:20:21  armnrbd
*     Messages informatifs quand au passage de la version 3.x a 4.0...
*     1) Les espaces en debut des noms de variables de sont plus pertinents.
*     2) Les grilles complexes de type CMPL sont maintenant supportees.
*     3) Les fichiers SQI sont reconnus, lus et ecrit directements.
*     4) Plusieurs nouvelles cles sont disponibles au demarrage.
*
*     Revision 3.0  93/10/13  13:56:11  armnrbd
*     Premiere version compatible HP-UX.
*     
*     Revision 1.1  92/04/12  22:15:35  armnrbd
*     Ajouter la definition de NOMPROG.
*     
*     Revision 1.0  92/04/12  22:03:50  armnrbd
*     Initial revision
*     
*     MAY 11/83 - R.LAPRISE.
*     DEC 17/80 - J.D.HENDERSON

*----------------------------------------------------------------------
      IMPLICIT    none

      INTEGER     HEAD
      PARAMETER ( HEAD = taille_entete )

      CHARACTER*4 TYPE,NAME,PKTYP
      LOGICAL     OK,GRID,ZONL,TYPL
      REAL        EQUA,DIFE,DELT
      INTEGER     J,L,LJF,LJH,IER,NLEV,HEM,
     +            N,N1,N2,NFF,NR,NN,NS,NLG,NLAT,NLATH,
     +            JBUF(taille_entete),MAXW,LEN0,JPAK,
     +            NWDS,LEN1,NWDS1,IN,IS

      INTEGER,    DIMENSION(:), ALLOCATABLE :: IBUF
      REAL,       DIMENSION(:), ALLOCATABLE :: GGN,GGS

      CHARACTER   GRTYP
      INTEGER     IG1,IG2,IG3,IG4
      REAL        DLAT1,DLAT2,DLON1,DY,DX

      CHARACTER*4 GETHIC,GETYP
      INTEGER     GETHIGH,GETSIZ
      EXTERNAL    GETYP,JCLPNT,GETFLD2,PUTFLD2,
     +            GETSIZ,GETHIGH,XIT,CXGAIG,CIGAXG,
     +            LBLCHK,GETHIC,PUTHIGH

      CHARACTER   NOMPRG*256
      COMMON     /PROGNAM/ NOMPRG

      DATA        IG2 / 0 /, GRTYP / 'G' /
*===================================================================

      NOMPRG =
     +'$Source: /home/cvs/RMNLIB/utils/rdiag/lspgm/gghems.ptn,v $'

*---------------------------------------------------------------------
      NFF=4
      CALL JCLPNT( NFF, 1,2,3, 6 )

      PKTYP = GETYP( 1 )
      PKTYP = PKTYP(1:2)

**     GET THE NEXT GLOBAL GRID FROM FILE 1.

      NN = 0
      NR = 0
      NS = 0

      MAXW = GETSIZ( 1, JBUF,LEN0,NWDS,JPAK )

      ALLOCATE( IBUF(LEN0),GGN(MAXW),GGS(MAXW) )

  100 CALL GETFLD2( 1, GGN, ' ',-1,' ',-1, IBUF,MAXW,OK )

          IF (.NOT.OK)                                         THEN
              WRITE(6,6100) NR,NN,NS
              IF (NR.EQ.0)                                     THEN
                  CALL                             XIT(' Gghems ',-1 )
              ELSE
                  CALL                             XIT(' Gghems ', 0 )
              END IF
          END IF

          IF (NR.EQ.0) CALL PRTLAB( IBUF )

***        CHECK GRID SIZE.

          CALL LBLCHK( LEN1,NWDS1,JPAK, IBUF )

          IF (LEN1.GT.LEN0 .OR. NWDS1.GT.NWDS)
     +        CALL                                 XIT(' Gghems ',-2 )

***        PROCESS ONLY GLOBAL GRIDS OR CROSS SECTIONS.

                             GRTYP = ' '
          IF (PKTYP.EQ.'SQ') GRTYP = GETHIC('GRTYP',IBUF )

          WRITE(TYPE,4) IBUF(1)
          WRITE(NAME,4) IBUF(3)

          HEM   =  IBUF(7)

          GRID  = (TYPE .EQ.'GRID')
          ZONL  = (TYPE .EQ.'ZONL')
          TYPL  = (GRTYP.EQ.'L'   )

          OK    = (GRID .OR. ZONL .OR. TYPL)

***        TAKE CARE OF HEMISPHERIC DATA.

          IF ((GRID .OR. ZONL) .AND. HEM.NE.0)                 THEN

              IF (OK)                                          THEN

***                TRANSFER ARRAY TO CORRESPONDING FILE.

                  IF (HEM.EQ.1)                                THEN
                      CALL PUTFLD2( 2, GGN, IBUF,MAXW )
                      IF (NAME.NE.'++') NN = NN+1
                  ELSE IF (HEM.EQ.2)                           THEN
                      CALL PUTFLD2( 3,GGN, IBUF,MAXW )
                      IF (NAME.NE.'++') NS = NS+1
                  ELSE
                      CALL PRTLAB( IBUF )
                      CALL                         XIT(' Gghems ',-3 )
                  END IF
              
              END IF

              IF (NAME.NE.'++') NR = NR+1
              GOTO 100

          END IF

***        DO THE ACTUAL WORK.

          IF (GRID .OR. ZONL)                                  THEN

              IF (PKTYP.EQ.'SQ') IG2 = GETHIGH('IG2',IBUF )

              IF (GRID)                                        THEN

                  NLG   = IBUF(5)
                  NLAT  = IBUF(6)
                  NLATH =  (NLAT+1)/2
                  N1    =  (NLAT   /2)*NLG
                  N2    =   NLATH     *NLG

                  IF ((GRTYP.EQ.'G'  .OR.
     +                 GRTYP.EQ.'A') .AND.
     +                 N1   .NE. N2)  CALL         XIT(' Gghems ',-4 )

***                SPLIT GRID INTO HEMISPHERES.
***                CHECK FOR NORTH-SOUTH ORIENTED SQ FILES.

                  IF (IG2.EQ.1)                                THEN
                      DO  J=1,N2
                          GGS(J) = GGN(N1+J)
                      END DO
                  ELSE
                      DO  J=1,N2
                          GGS(J) = GGN(J)
                          GGN(J) = GGN(N1+J)
                      END DO
                  END IF

              ELSE IF (ZONL)                                   THEN

                  IF (NAME.EQ.'++')                            THEN

***                    SAVE VERTICAL LEVELLING INFORMATION AS IS.

                      IBUF(7) = 1
                      CALL PUTFLD2( 2, GGN, IBUF,MAXW )
                      IBUF(7) = 2
                      CALL PUTFLD2( 3, GGN, IBUF,MAXW )
                      GOTO 100

                  ELSE
 
                      NLEV  = IBUF(6)
                      NLAT  = IBUF(5)
                      N1    =  NLAT   /2
                      N2    = (NLAT+1)/2

                      IF ((GRTYP.EQ.'G'  .OR.
     +                     GRTYP.EQ.'A') .AND.
     +                     N1   .NE. N2)  CALL     XIT(' Gghems ',-4 )

***                    RE-ORDER MULTI-LEVEL ZONAL CROSS-SECTIONS.

                      IF (IG2.EQ.1)                            THEN

                          DO 300 L=1,NLEV

                              LJF = (L-1)*NLAT + N1
                              LJH = (L-1)*N2
                              DO  J=1,N2
                                  GGS(LJH+J) = GGN(LJF+J)
                              END DO

                              LJF = (L-1)*NLAT
                              LJH = (L-1)*N2
                              DO  J=1,N2
                                  GGN(LJH+J) = GGN(LJF+J)
                              END DO

  300                     CONTINUE

                      ELSE

                          DO 400 L=1,NLEV

                              LJF = (L-1)*NLAT
                              LJH = (L-1)*N2
                              DO  J=1,N2
                                  GGS(LJH+J) = GGN(LJF+J)
                              END DO

                              LJF = (L-1)*NLAT + N1
                              LJH = (L-1)*N2
                              DO  J=1,N2
                                  GGN(LJH+J) = GGN(LJF+J)
                              END DO

  400                     CONTINUE

                      END IF

                  END IF

              END IF

***            SAVE HEMISPHERES ON FILES 2 (N) AND 3 (S).

              IF (GRID) IBUF(6) = (NLAT+1)/2
              IF (ZONL) IBUF(5) =  N2

              IBUF(7) = 1
              CALL PUTFLD2( 2, GGN, IBUF,MAXW )
              IF (NR.EQ.0) CALL PRTLAB( IBUF )
              NN = NN+1

              IBUF(7) = 2
              CALL PUTFLD2( 3, GGS, IBUF,MAXW )
              IF (NR.EQ.0) CALL PRTLAB( IBUF )
              NS = NS+1

          ELSE IF (TYPL)                                       THEN

***            PROCESS GENERAL LAT-LONG GRIDS.

              IG1 = gethigh('IG1',IBUF )
              IG2 = gethigh('IG2',IBUF )
              IG3 = gethigh('IG3',IBUF )
              IG4 = gethigh('IG4',IBUF )

              CALL cigaxg( GRTYP, DLAT1, DLON1, DY , DX,
     +                            IG1  , IG2  , IG3, IG4 )

              NLG   = IBUF(5)
              NLAT  = IBUF(6)

              DLAT2 = DLAT1 + DY*(NLAT-1)

***            DETERMINE THE LATITUDE POSITIONAL PRECISION.

              IF (DY.LT.1.0)                                   THEN
                  DELT = 0.001
              ELSE IF (DY.LE.20.0)                             THEN
                  DELT = 0.010
              ELSE
                  DELT = 1.000
              END IF

              IF (DLAT1.GE.-DELT)                              THEN

***                A PURELY NH ARRAY. SAVE IT AS SUCH.

                  CALL PUTFLD2( 2, GGN, IBUF,MAXW )
                  IF (NR.EQ.0) CALL PRTLAB( IBUF )
                  NN = NN+1

              ELSE IF (DLAT2.LE.DELT)                          THEN

***                A PURELY SH ARRAY. SAVE IT AS SUCH.

                  CALL PUTFLD2( 3, GGN, IBUF,MAXW )
                  IF (NR.EQ.0) CALL PRTLAB( IBUF )
                  NS = NS+1

              ELSE

***                THIS ARRAY SPANS THE EQUATOR. LET'S FIND THE
***                EQUATOR'S INDEX AND SEPARATE THE ARRAY THERE.

                  EQUA = 1.0 - DLAT1/DY
                  DIFE = ABS( EQUA - ANINT( EQUA ) )

                  IF (DIFE.LT.DELT)                            THEN
                      IS = NINT( EQUA )
                      IN = IS
                  ELSE
                      IS = INT( EQUA )
                      IN = IS+1
                  END IF

***                START BY SAVING THE SH. WE SIMPLY
***                REDEFINE THE NUMBER OF LATITUDES.

                  IBUF(6) = IS

                  CALL PUTFLD2( 3, GGN, IBUF,MAXW )
                  IF (NR.EQ.0) CALL PRTLAB( IBUF )
                  NS = NS+1

***                NOW, DO THE NH. WE HAVE TO MODIFY THE
***                GRID DESCRIPTORS TO ACCOUNT FOR THE
***                NEW STARTING LATITUDE.

                  DLAT1 = DLAT1 + (IN-1)*DY

                  CALL cxgaig( GRTYP, IG1  , IG2  , IG3, IG4,
     +                                DLAT1, DLON1, DY , DX )

                  CALL PUTHIGH( IG1,'IG1',IBUF )
                  CALL PUTHIGH( IG2,'IG2',IBUF )
                  CALL PUTHIGH( IG3,'IG3',IBUF )
                  CALL PUTHIGH( IG4,'IG4',IBUF )

                  N = (IN-1)*NLG
                  DO  J=1,NLAT*NLG-N
                     GGS(J) = GGN(J+N)
                  END DO

                  IBUF(6) = NLAT-(IN-1)

                  CALL PUTFLD2( 2, GGS, IBUF,MAXW )
                  IF (NR.EQ.0) CALL PRTLAB( IBUF )
                  NN = NN+1

              END IF

          END IF

      NR = NR+1
      GOTO 100
*---------------------------------------------------------------------

    4 FORMAT(A4)

 6100 FORMAT('0',I6,'  records read:',I6,' NH and',I6,' SH written.')

      END
#     endif
