#     if defined (AUTO_DOC)
*
*     CALL SEQUENCE...
*      critt  TC INPUT OUTPUT [-a VAL1 -b VAL2 -c VAL3]
*
*
*     DESCRIPTION...
*      critt  - COMPUTES THE CRITICAL VALUE FOR THE STUDENT-T TEST
*
*
*     AUTHOR  - M.Lazare, November 16 1982.
*     LAST REVISION: $Header: /home/cvs/RMNLIB/utils/rdiag/lspgm/critt.ptn,v 4.3 2014/09/25 20:20:46 dugas Exp $
*
*
*     PURPOSE - COMPUTES THE CRITICAL VALUE OF THE STANDARD SIGNIFICANCE
*               (STUDENT-T) TEST FOR 2 POOLED DATA SETS,  FOR A GIVEN
*               LEVEL OF THE TEST , AND FOR CERTAIN SAMPLE SIZES OF
*               CONTROL AND EXPERIMENT.
*
*
*     OUTPUT FILE...
*      TC = CARD IMAGE FILE OF CRITICAL VALUE IN THE PROPER FORMAT
*           TO BE READ BY THE PROGRAM XLIN.
* 
*
*     INPUT PARAMETERS...
*
*      ALFA (a) = SIGNIFICANCE LEVEL (THE SUPPORTED VALUES ARE .01,
*                 .05 AND .10, WHICH CORRESPOND RESPECTIVELY TO 99%,
*                 95% AND 90% CONFIDENCE LEVELS)
*      RM   (b) = SAMPLE SIZE OF THE EXPERIMENT
*      RN   (c) = SAMPLE SIZE OF THE CONTROL RUN
*
*      NOTES: 1) IF THE NUMBER OF DEGREES OF FREEDOM (DF = RM+RN-2)
*                IS .LE. 30, EXACT CRITICAL VALUES ARE PROVIDED.
*             2) FOR DF IN THE...
*                 ]30, 40] RANGE, CRITICAL VALUES FOR  40 ARE GIVEN;
*                 ]40, 60] RANGE, CRITICAL VALUES FOR  60 ARE GIVEN;
*                 ]60,120] RANGE, CRITICAL VALUES FOR 120 ARE GIVEN;
*             3) FOR DF VALUES GREATER THAN 120, THE ASYMPTOTIC
*                CRITICAL VALUES AT INFINITY ARE GIVEN.
*
*      READ(5,5000) ALFA,RM,RN
*5000  FORMAT(10X,3E10.0) 
*
*
*     EXAMPLE OF INPUT CARD...
*
**CRITT         0.05        1.        5.
*
*        0123456789012345678901234567890123456789012345678901234567890
*        1         2         3         4         5         6         7
*
*
*     EXIT CONDITIONS...
*       0 NO PROBLEMS
*       1 UNSUPPORTED VALUES OF ALFA
*       2 RM+RN-2 SMALLER THAN 1
*       3 ERRORS WHILE READING PARAMETRES
*
#     endif
#     if defined (RDIAG_LICENCE)
!---------------------------------- LICENCE BEGIN -------------------------------
! R.DIAG - Diagnostic tool kit for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This code is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
#     endif
#     if !defined (NO_SOURCE)
      PROGRAM critt 
*     PROGRAM CRITT (TC,       INPUT,       OUTPUT,                     )
*    1         TAPE2=TC, TAPE5=INPUT, TAPE6=OUTPUT) 
*     ---------------------------------------------
*     $Log: critt.ptn,v $
*     Revision 4.3  2014/09/25 20:20:46  dugas
*     Inserer le texte de la licence LPGPL 2.1 pour R.DIAG.
*
*     Revision 4.2  2008/05/03 21:06:30  dugas
*     Modification generale pour r.gppf.
*
*     Revision 4.1  2007/12/19 19:46:57  dugas
*     Augmenter la precision du resultat lorsque DF .GE. 30
*
*     Revision 4.0  1995/12/21 20:26:21  armnrbd
*     Version initiale.
*

*     JAN 29/92 - E. CHAN  (CONVERT HOLLERITH LITERALS TO ASCII)
*     APRIL 16/84 - M.LAZARE.                                                  
*     MAY 06/83 - R.LAPRISE.
*     CCRN NOVEMBER 16/82 - M LAZARE
*
*------------------------------------------------------------------------ 
      IMPLICIT  none
* 
*     * DEFINE THE MATRIX OF POSSIBLE VALUES OF TCRITICAL- THE 3 ROWS OF
*     * "TCRMAT" MATRIX CORRESPOND TO ALFA=.01,.05, AND .10 (THE USUAL
*     * SIGNIFICANCE LEVELS), WHILE THE 30 COLUMNS CORRESPOND TO THE
*     * NUMBER OF ALLOWABLE DEGREES OF FREEDOM. 

      LOGICAL     OK
      CHARACTER   LIGNE*80
      REAL        TCRMAT(3,34),X
      REAL        TCRIT,ALFA,RM,RN 
      INTEGER     IDEGFR,IROW,NFF,IO

      CHARACTER   NOMPRG*256
      COMMON     /PROGNAM/ NOMPRG

      LOGICAL     RPBLOC
      EXTERNAL    JCLPNT,RPBLOC,GETLIGN,BURNF

      DATA        TCRMAT /
     +            63.657,12.706, 6.314, 9.925, 4.303, 2.920,
     +             5.841, 3.182, 2.353, 4.604, 2.776, 2.132,
     +             4.032, 2.571, 2.015, 3.707, 2.447, 1.943,
     +             3.499, 2.365, 1.895, 3.355, 2.306, 1.860,
     +             3.250, 2.262, 1.833, 3.169, 2.228, 1.812,
     +             3.106, 2.201, 1.796, 3.055, 2.179, 1.782,
     +             3.012, 2.160, 1.771, 2.977, 2.145, 1.761,
     +             2.947, 2.131, 1.753, 2.921, 2.120, 1.746,
     +             2.898, 2.110, 1.740, 2.878, 2.101, 1.734,
     +             2.861, 2.093, 1.729, 2.845, 2.086, 1.725,
     +             2.831, 2.080, 1.721, 2.819, 2.074, 1.717,
     +             2.807, 2.069, 1.714, 2.797, 2.064, 1.711,
     +             2.787, 2.060, 1.708, 2.779, 2.056, 1.706,
     +             2.771, 2.052, 1.703, 2.763, 2.048, 1.701,
     +             2.756, 2.045, 1.699, 2.750, 2.042, 1.697,
     +             2.704, 2.021, 1.684, 2.660, 2.000, 1.671,
     +             2.617, 1.980, 1.658, 2.576, 1.960, 1.645/
*===================================================================

      NOMPRG =
     +'$Source: /home/cvs/RMNLIB/utils/rdiag/lspgm/critt.ptn,v $'

*---------------------------------------------------------------------
***    ACCEDER LES FICHIERS D'E/S.

      NFF = 3 
      CALL JCLPNT( NFF, -2, 5,6 )

      IF (RPBLOC( ' ',LIGNE ))                                 THEN

***        CHECK PARAMETRE BLOCK.

          ALFA = 0.0
          RM   = 0.0
          RN   = 0.0

          OK = RPBLOC('A',LIGNE)
          IF (OK) READ(LIGNE,10,END=903,ERR=903,IOSTAT=IO) ALFA

          OK = RPBLOC('B',LIGNE)
          IF (OK) READ(LIGNE,10,END=903,ERR=903,IOSTAT=IO) RM

          OK = RPBLOC('C',LIGNE)
          IF (OK) READ(LIGNE,10,END=903,ERR=903,IOSTAT=IO) RN

      ELSE

***        READ IN PARAMETERS
          
          CALL GETLIGN( 5,LIGNE,80,OK )

          IF (.NOT.OK)                                         THEN
              GOTO 903
          ELSE
              READ(LIGNE,5000,END=903,ERR=903,IOSTAT=IO) ALFA,RM,RN
              CALL BURNF
          END IF

      END IF

      WRITE(6,6000) ALFA,RM,RN
      IDEGFR = NINT( RM+RN-2. ) 

***    EXIT WITH ERROR MESSAGE IF BAD INPUT PARAMETERS 

      IF (ALFA .NE. .01 .AND.
     +    ALFA .NE. .05 .AND.
     +    ALFA .NE. .10 ) 
     +    CALL                                     XIT('  Critt ',-1 )

      IF (IDEGFR.LT. 1)                                        THEN
          CALL                                     XIT('  Critt ',-2 )
      ELSE
     +IF (IDEGFR.GT.30 .AND. IDEGFR.LE. 40)                    THEN
          IDEGFR =  31
      ELSE
     +IF (IDEGFR.GT.40 .AND. IDEGFR.LE. 60)                    THEN
          IDEGFR =  32
      ELSE
     +IF (IDEGFR.GT.60 .AND. IDEGFR.LE.120)                    THEN
          IDEGFR =  33
      ELSE
          IDEGFR =  34
      END IF

***    FIND OUT CRITICAL VALUE OF T FOR REQUIRED PARAMETERS
***    CORRESPONDING TO THE ABOVE MATRIX 

      IF (ALFA.EQ..01) IROW = 1
      IF (ALFA.EQ..05) IROW = 2
      IF (ALFA.EQ..10) IROW = 3

      TCRIT = TCRMAT(IROW,IDEGFR) 

***    WRITE OUT RESULT AND EXIT NORMALLY

      X = 0.
      WRITE(2,2000) X,TCRIT 
      WRITE(6,6010) X,TCRIT 

      CALL                                         XIT('  Critt ', 0 ) 

***    E.O.F. ON INPUT.

  903 CALL                                         XIT('  Critt ',-3 )
*-----------------------------------------------------------------------

 0010 FORMAT(BN,E10.0)
 5000 FORMAT(10X,3E10.0)

 2000 FORMAT(' XLIN.    ',2F10.3)
 6000 FORMAT('0 Alfa,xyr,yyr=',3F10.3)
 6010 FORMAT('0   x,tcrit=',2F10.3)

      END 
#     endif
