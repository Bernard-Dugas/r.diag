#     if defined (AUTO_DOC)
*
*     CALL SEQUENCE...
*      spreim  X Y Z OUTPUT
*
*
*     DESCRIPTION...
*      spreim - SEPARATES REAL AND IMAGINARY PARTS OF A COMPLEX ARRAY
*
*
*     AUTHOR  - G.J. Boer, APR/85.
*     LAST REVISION: $Header: /home/cvs/RMNLIB/utils/rdiag/lspgm/spreim.ptn,v 4.6 2014/09/25 20:20:54 dugas Exp $
*
*
*     PURPOSE - FILE PROGRAM Y = REAL (X) AND Z = IMAG (X).
*
*     NOTE    - 1) X MUST BE COMPLEX.
*               2) Y AND Z ARE RETURNED AS REAL PARTS OF COMPLEX FIELDS
*                  HAVING THE SAME SIZE AS X.
*
*
*     INPUT FILE...
*      X = ANY COMPLEX ARRAY (MAX grille_maximale / 2 COMPLEX WORDS)
*
*     OUTPUT FILES...
*      Y = COMPLEX FIELD CONTAINING (REAL(X),0.)
*      Z = COMPLEX FIELD CONTAINING (IMAG(X),0.)
*
*
*     EXIT CONDITIONS...
*       0 NO PROBLEMS
*       1 ERROR READING X
*       2 X CONTAINS NON-COMPLEX DATA
#     endif
#     if defined (RDIAG_LICENCE)
!---------------------------------- LICENCE BEGIN -------------------------------
! R.DIAG - Diagnostic tool kit for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This code is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
#     endif
#     if !defined (NO_SOURCE)
      PROGRAM spreim
*     PROGRAM SPREIM (X,       Y,       Z,       OUTPUT,
*    1          TAPE1=X, TAPE2=Y, TAPE3=Z, TAPE6=OUTPUT)
*     --------------------------------------------------
 
*     $Log: spreim.ptn,v $
*     Revision 4.6  2014/09/25 20:20:54  dugas
*     Inserer le texte de la licence LPGPL 2.1 pour R.DIAG.
*
*     Revision 4.5  2008/05/03 21:06:30  dugas
*     Modification generale pour r.gppf.
*
*     Revision 4.4  2007/12/20 21:19:13  dugas
*     - Utiliser ALLOCATE/DEALLOCATE plutot que HPALLOC/HPDEALLC.
*     - Faire appel aux routines PRTLAB/PRTLAB2.
*
*     Revision 4.3  2003/05/23 21:30:23  dugas
*     Augmenter la taille du macro grille_maximale a 300K mots.
*
*     Revision 4.2  1998/07/03 02:26:40  armnrbd
*     Allonger le format d'ecriture de la date sur le listing.
*
*     Revision 4.1  1998/05/21  20:20:55  armnrbd
*     Modifier la valeur par defaut de taille_entete
*
*     Revision 4.0  1994/11/17  14:21:56  armnrbd
*     Messages informatifs quand au passage de la version 3.x a 4.0...
*     1) Les espaces en debut des noms de variables de sont plus pertinents.
*     2) Les grilles complexes de type CMPL sont maintenant supportees.
*     3) Les fichiers SQI sont reconnus, lus et ecrit directements.
*     4) Plusieurs nouvelles cles sont disponibles au demarrage.
*
*     Revision 3.0  93/10/13  13:57:07  armnrbd
*     Premiere version compatible HP-UX.
*     
*     Revision 1.3  92/11/10  23:00:47  23:00:47  armnrbd (Bernard Dugas)
*     Implantation de GETSIZ/GETSIZ2.
*     
*     Revision 1.2  92/04/28  12:30:25  armnrbd
*     Ajouter la documentation automatique.
*     
*     Revision 1.1  92/04/24  16:41:21  armnrbd
*     Corriger un bogue dans la ligne "External".
*     
*     Revision 1.0  92/03/04  21:01:36  armnrbd
*     Initial revision
*     
*     APR 85 - G.J.BOER

*-----------------------------------------------------------------------
      IMPLICIT    none

      INTEGER     HEAD
      PARAMETER ( HEAD = taille_entete )

      REAL        ZERO
      CHARACTER   KIND*4
      LOGICAL     OK,SPEC
      INTEGER     NFF,NRECS,NWDS,I,MAXW,
     +            JBUF(HEAD),LEN,JPAK

      INTEGER,    DIMENSION(:), ALLOCATABLE :: IBUF
      REAL,       DIMENSION(:), ALLOCATABLE :: A,B,C

      CHARACTER   NOMPRG*256
      COMMON     /PROGNAM/ NOMPRG

      INTEGER     GETSIZ      
      EXTERNAL    GETSIZ,JCLPNT,GETFLD2,XIT,PUTFLD2
*===================================================================

      NOMPRG =
     +'$Source: /home/cvs/RMNLIB/utils/rdiag/lspgm/spreim.ptn,v $'

*-----------------------------------------------------------------------
      NFF = 4
      CALL JCLPNT( NFF, 1,2,3, 6 )

      ZERO  = 0.0
      NRECS = 0

***    ASK FOR NECESSARY MEMORY. READ FIRST INFO BUFFER.

  050 MAXW = GETSIZ( 1, JBUF,LEN,NWDS,JPAK )
      IF (MAXW.EQ.0) CALL                          XIT(' Spreim ',-1 )

***    STOP IF FIELD IS NOT COMPLEX.

      WRITE(KIND,4) JBUF(1) 
      SPEC = (KIND.EQ.'SPEC' .OR.
     +        KIND.EQ.'FOUR' .OR.
     +        KIND.EQ.'CMPL')

      IF (.NOT.SPEC) CALL                          XIT(' Spreim ',-2 ) 
 
***    ALLOCATE WORKING MEMORY.

      ALLOCATE( IBUF(LEN),A(MAX( MAXW,NWDS )),
     +                    B(MAX( MAXW,NWDS )),
     +                    C(MAX( MAXW,NWDS )) )

  100 CALL GETFLD2( 1, A, ' ',-1,' ',-1, IBUF,MAXW,OK )

          IF (.NOT.OK)                                         THEN
              WRITE(6,6020) NRECS
              IF (NRECS.EQ.0) CALL                 XIT(' Spreim ',-1 )
              CALL                                 XIT(' Spreim ', 0 )
          END IF

          IF (NRECS.EQ.0) CALL PRTLAB( IBUF )

***        MAKE SURE THAT THE FIELD IS COMPLEX.

          WRITE(KIND,4)  IBUF(1)
          SPEC = (KIND.EQ.'SPEC' .OR.
     +            KIND.EQ.'FOUR' .OR.
     +            KIND.EQ.'CMPL')

          IF (.NOT.SPEC) CALL                      XIT(' Spreim ',-2 )

***        GET REAL AND IMAG PARTS.

          NWDS = IBUF(5)*IBUF(6)*2

          DO 200 I=1,NWDS,2
              B(I  ) =  A(I) 
              C(I  ) =  A(I+1)
              B(I+1) =  ZERO
              C(I+1) =  ZERO
  200     CONTINUE

***        SAVE THE RESULT.

          CALL PUTFLD2( 2, B, IBUF,MAXW )
          CALL PUTFLD2( 3, C, IBUF,MAXW )

          IF (NRECS.EQ.0) CALL PRTLAB( IBUF )

      NRECS = NRECS+1
      GOTO 100
*-----------------------------------------------------------------------
    4 FORMAT(A4)

 6020 FORMAT('0Spreim read ',I5,' records.')

      END
#     endif
