#     if !defined (lm_maximal)
#         define   lm_maximal 4999
#     endif
#     if defined (AUTO_DOC)
*
*     CALL SEQUENCE...
*      splinv  SPIN SPOUT OUTPUT
*
*
*     DESCRIPTION...
*      splinv - CALCULATES NEG-INVERSE LAPLACIAN OF SPECTRAL INPUT FILE
*
*
*     AUTHORS - B.Dugas AND S.J.Lambert, SEPT 13/86.
*     LAST REVISION: $Header: /home/cvs/RMNLIB/utils/rdiag/lspgm/splinv.ptn,v 4.11 2014/09/25 20:20:53 dugas Exp $
*
*
*     PURPOSE - CALCULATES THE NEGATIVE OF THE INVERSE LAPLACIAN IN 
*               FILE (SPOUT) OF THE INPUT FILE (SPIN) BY MULTIPLYING 
*               IT BY A**2/(N(N+1))
*
*     NOTE    - ALL RECORDS ARE TO BE OF THE SAME SIZE AND TYPE.
*
*
*     INPUT FILE...
*      SPIN  =  CCRN FORMAT SPECTRAL FILE
*
*     OUTPUT FILE...
*      SPOUT = FILE CONTAINING -INVERSE LAPLACIAN OF THE INPUT FILE
*
*
*     EXIT CONDITIONS...
*      0 NO PROBLEMS
*      1 PROBLEMS READING IN
*      2 UNABLE TO DETERMINE SPECTRAL PARAMETRES
*      3 MORE THAN ONE SIZE
#     endif
#     if defined (RDIAG_LICENCE)
!---------------------------------- LICENCE BEGIN -------------------------------
! R.DIAG - Diagnostic tool kit for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This code is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
#     endif
#     if !defined (NO_SOURCE)
      PROGRAM splinv
*    +        (      SPIN,       SPOUT,       OUTPUT,
*    +         TAPE1=SPIN, TAPE2=SPOUT, TAPE6=OUTPUT)
  
*     $Log: splinv.ptn,v $
*     Revision 4.11  2014/09/25 20:20:53  dugas
*     Inserer le texte de la licence LPGPL 2.1 pour R.DIAG.
*
*     Revision 4.10  2013/10/16 19:57:21  bernard
*      - Utiliser le lm_maximal pour definir la valeur de MAXM
*      - Declarations 'a la' F90
*
*     Revision 4.9  2008/05/03 21:06:30  dugas
*     Modification generale pour r.gppf.
*
*     Revision 4.8  2007/12/20 21:19:13  dugas
*     - Utiliser ALLOCATE/DEALLOCATE plutot que HPALLOC/HPDEALLC.
*     - Faire appel aux routines PRTLAB/PRTLAB2.
*
*     Revision 4.7  2003/05/23 20:32:46  dugas
*     Augmenter la taille du macro "grille_maximale"" a 300000
*      mots et corriger la verifications des noms de variables.
*
*     Revision 4.6  2000/09/13 12:52:21  armnrbd
*     Allocation utilisant l'information fournie par GETSIZ.
*
*     Revision 4.5  2000/09/12 14:07:38  armnrbd
*     Augmenter la valeur de MAXW.
*
*     Revision 4.4  1999/07/06 18:21:36  armnrbd
*     Modifier certains formats de sorties.
*
*     Revision 4.3  1998/07/03 02:26:39  armnrbd
*     Allonger le format d'ecriture de la date sur le listing.
*
*     Revision 4.2  1998/05/20  15:18:11  armnrbd
*     Augmenter la valeur de MAXW.
*     Reconnaitre le nom QR pour les fichiers standards.
*
*     Revision 4.1  1997/05/30  18:04:36  armnrbd
*     Conversions de noms/unites seulement pour fichiers SQ89.
*
*     Revision 4.0  1994/11/17  14:21:51  armnrbd
*     Messages informatifs quand au passage de la version 3.x a 4.0...
*     1) Les espaces en debut des noms de variables de sont plus pertinents.
*     2) Les grilles complexes de type CMPL sont maintenant supportees.
*     3) Les fichiers SQI sont reconnus, lus et ecrit directements.
*     4) Plusieurs nouvelles cles sont disponibles au demarrage.
*
*     Revision 3.1  94/05/30  12:12:10  armnrbd
*     Remplacer GETBUF2 par GETSIZ.
*     
*     Revision 3.0  93/10/13  13:57:04  13:57:04  armnrbd (Bernard Dugas)
*     Premiere version compatible HP-UX.
*     
*     Revision 1.5  93/08/04  15:55:31  15:55:31  armnrbd (Bernard Dugas)
*     Utiliser CLRLMT dans les calculs de lrlmt.
*     
*     Revision 1.4  93/06/28  09:41:16  armnrbd
*     Enlever le moins (-) dans le facteur constant de conversion afin de
*     retablir la coherence avec la documentation du programme.
*     
*     Revision 1.3  92/11/23  14:26:05  armnrbd
*     Deuxieme iteration avec GETSIZ/GETSIZ2.
*     
*     Revision 1.2  92/11/10  22:28:00  armnrbd
*     Implantation de GETSIZ/GETSIZ2.
*     
*     Revision 1.1  92/04/29  15:08:29  armnrbd
*     Ajouter la documentation automatique.
*     
*     Revision 1.0  92/02/24  14:41:57  armnrbd
*     Initial revision
*     
***    NOVEMBRE  26/90 - B.DUGAS, RPN. (PORT TO CY920/IRIX F77)
***    SEPTEMBRE 13/85 - B.DUGAS, S.LAMBERT. 
  
***    PROGRAM MULTIPLIES THE INPUT FILE OF SPHERICAL HARMONIC 
***    COEFFICIENTS BY THE FACTOR  A*A/(N*(N+1))  WHERE  A  IS THE 
***    RADIUS OF THE EARTH AND  N  IS THE DEGREE OF AN ASSOCIATED
***    LEGENDRE POLYNOMIAL. ALL THE INPUT RECORDS ARE SUPPOSED TO
***    HAVE THE SAME SPECTRAL DIMENSIONS.
  
*-----------------------------------------------------------------------------
      IMPLICIT    none

      INTEGER, PARAMETER :: HEAD = taille_entete
      INTEGER, PARAMETER :: MAXLM = lm_maximal

      LOGICAL     OK
      REAL(8)     CONST
      CHARACTER*4 NOM,LINV,PSI,CHI
      INTEGER     LSR(2,MAXLM),NRECS,NF,LA,LAF,LAP,LAN,
     +            LR,LM,KTR,LRLMT,KIND,L,IER,MAXW,
     +            LEN,NWDS,JBUF(HEAD),JPAK

      INTEGER,    DIMENSION(:), ALLOCATABLE :: IBUF
      REAL(8),    DIMENSION(:), ALLOCATABLE :: SCAL,F

      LOGICAL,    EXTERNAL :: SETIO64
      INTEGER,    EXTERNAL :: GETSIZ,CLRLMT
      EXTERNAL    JCLPNT,XIT,DIMGT2,GETFLD2,CALPHA,PUTFLD2

      CHARACTER   NOMPRG*256
      COMMON     /PROGNAM/ NOMPRG

      DATA        CONST / 4.059244E+13 /
      DATA        LINV  /    'LINV'    /,
     +            PSI   /    'PSI'     /,
     +            CHI   /    'CHI'     /  
*===================================================================

      NOMPRG =
     +'$Source: /home/cvs/RMNLIB/utils/rdiag/lspgm/splinv.ptn,v $'

*-----------------------------------------------------------------------
***    ACCEDER LES FICHIERS D'E/S.

      NF   = 3
      CALL JCLPNT( NF, 1,2, 6 )

***    SETUP FOR 64-BIT I/O.

      OK = SETIO64(.TRUE.)

      NRECS  = 0
  
***    READ FIRST INFORMATION BUFFER
***    AND ALLOCATE WORKING ARRAYS.

      MAXW = GETSIZ( 1, JBUF,LEN,NWDS,JPAK )
      IF (MAXW.EQ.0) CALL                          XIT(' Splinv ',-1 )

      ALLOCATE( SCAL(MAXW),F(MAXW),IBUF(LEN) )

***    DETERMINE KIND OF SPECTRAL FIELDS (FULL OR OTHERWISE).

      LA    = JBUF(5)
      LRLMT = JBUF(7)

      CALL DIMGT2( LSR, LAF,LR,LM,KTR,LRLMT,  0,-1 )
      CALL DIMGT2( LSR, LAP,LR,LM,KTR,LRLMT, +1,-1 )
      CALL DIMGT2( LSR, LAN,LR,LM,KTR,LRLMT, -1,-1 )
  
      IF (LA.EQ.LAF)                                           THEN
          KIND =  0
      ELSE IF (LA.EQ.LAN)                                      THEN
          KIND = -1
      ELSE IF (LA.EQ.LAP)                                      THEN
          KIND = +1
      ELSE
          WRITE(6,6002) LA,LRLMT
          CALL                                     XIT(' Splinv ',-2 )
      END IF

      WRITE(NOM,4) JBUF(3)

      IF (NOM.EQ.'QQ' .OR.
     +    NOM.EQ.'QR' .OR.
     +    NOM.EQ.'DD')                                         THEN
          PSI = 'PP'
          CHI = 'CC'
      END IF

***    COMPUTE THE COMPLEX ARRAY RADIUS**2/ALPHA(N,M).
  
      CALL DIMGT2( LSR,  LA,LR,LM,KTR,LRLMT, KIND, 0 )
      CALL CALPHA( SCAL, LSR,LM,LA,          KIND )

      DO 100 L=3,2*LA-1,2
          SCAL(L) = CONST/SCAL(L)
  100 CONTINUE

***    READ IN DATA. 
  
  200 CALL GETFLD2( 1, F, 'SPEC',-1,' ',-1, IBUF,MAXW,OK ) 

          IF (.NOT.OK)                                         THEN
 
              WRITE(6,6020) NRECS 
              IF (NRECS.EQ.0) CALL                 XIT(' Splinv ',-1 ) 
              CALL PRTLAB( IBUF )
              CALL                                 XIT(' Splinv ', 0 )

          ENDIF 
  
***        CHECK DIMENSIONS.

          IF (IBUF(5).NE.LA   .OR. 
     +       (IBUF(7).NE.CLRLMT(LR,LM,KTR,.TRUE.).AND.
     +        IBUF(7).NE.CLRLMT(LR,LM,KTR,.FALSE.)))
     +        CALL                                 XIT(' Splinv ',-3 )

***        DO THE CONVERSION.
  
          DO 300 L=1,2*LA-1,2 
              F(L  ) = F(L  )*SCAL(L)
              F(L+1) = F(L+1)*SCAL(L)
  300     CONTINUE

***        IF INPUT NAME IS NEITHER OF 'DIV' OR 'VORT',
***        SAVE RECORD UNDER THE NAME LINV. IN THE OTHER
***        TWO CASES, OUTPUT NAME IS 'CHI' OR 'PSI'.
  
          WRITE(NOM,4) IBUF(3)

          IF (NOM.NE.'DIV'  .AND.
     +        NOM.NE.'VORT' .AND.
     +        NOM.NE.'DD'   .AND.
     +        NOM.NE.'QQ'   .AND.
     +        NOM.NE.'QR'  )                                   THEN
                                       READ(LINV,4) IBUF(3)
          ELSE
          IF (NOM.EQ.'VORT' .OR.
     +        NOM.EQ.'QQ'   .OR.
     +        NOM.EQ.'QR'  )                                   THEN
                                       READ(PSI ,4) IBUF(3)
          ELSE
     +    IF (NOM.EQ.'DIV'  .OR.
     +        NOM.EQ.'DD'  )                                   THEN
                                       READ(CHI ,4) IBUF(3)
              END IF
          END IF

          CALL PUTFLD2( 2, F, IBUF,MAXW ) 

          IF (NRECS.EQ.0) CALL PRTLAB( IBUF )

      NRECS   = NRECS+1 
      GOTO 200

*-----------------------------------------------------------------------
    4 FORMAT(A4)

 6002 FORMAT(' Unable to determine some of the spectral ',
     +       ' parametres associated to LA,LRLMT =',I8,I10)
 6020 FORMAT('0Splinv computed ',I5,' records.')

      END 
#     endif
